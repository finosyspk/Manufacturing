{"version":3,"sources":["views/Transactions/MoEntry/index.js","ui-component/ElevationScroll.js","utilities/validateLookup.js"],"names":["FormName","MoEntry","lookupTxtField","useState","isDisable","setisDisable","rowEntryCode","setRowEntryCode","isLocationLookUp","setIsLocationLookUp","isBoMLookUp","setIsBoMLookUp","setLoadingOnSave","selectLookupVal","setSelected","setSearchRows","setFilter","dosaveFunction","setIsEditorView","React","Date","lookupSelectRow","TransDate","TransNo","TransType","LocationCode","Location","ItemCode","Item","UOMCode","UOM","RoutingCode","RoutingName","TransStatus","UnitQuantity","Quantity","BaseQuantity","MOStatus","BOMID","Header","setHeader","registerNotOpen","viewList","newList","editList","property","setProperty","columns","title","field","align","type","width","render","rowData","value","CItemCode","name","disabled","column","CItemName","StageName","symbol","rows","ItemTable","SetItemTable","cellStyle","border","paddingTop","paddingBottom","headerStyle","fontWeight","background","LocationName","locationLookupList","setLocationLookupList","ItemName","BoMLookupList","setBoMLookupList","dispatch","useDispatch","lookupRes","useSelector","AllActionsRes","onViewData","singleList","Message","useEffect","error","nullList","Success","Detail","setOnBlueDisable","validationOnSave","undefined","open","severity","msg","ShiftHeaLocationd","handleSnakeBarClose","changeLookupVal","setLookUpData","e","Lookupname","target","UnitQty","getLocationLookUpData","getInventoryLookupData","getBoMLookUpData","getLookupData","setMOStatus","val","getLookup2Data","prevState","lookupDataInventory","lookupData","BOM","lookupData2","MODetail","item","xs","close","onClick","container","Details","DialogClose","prevstate","Prev","dialog","AddData","data","EditData","row","SetRowDataID","Button","ID","ViewData","CodeMsg","payload","getSingleList","FormID","FormCode","isPostButton","isEditButton","spacing","alignItems","justifyContent","goBack","clearAll_OnClick","clearAll","saveAndClose","saveAndClose_OnClick","submitButton","SaveButton","Button2","submit","SaveButton_OnClick","MODetails","createOrUpdate","prev","HandleSave","submitButton_OnClick","postAndSave","Button2_OnClick","printVoucher","label","id","Change","date","reference","lookupOpen","onBlurDiv","onFocus","onBlur","setTimeout","validateLookup","propertyName","listForSearch","setSearchRowProp","searchResult","setFilterProp","filter","setLookupEnable","bomCodeLookUp","lookupValuesList","list","icons","Icons","options","showTitle","toolbar","actionsColumnIndex","pageSize","pageSizeOptions","search","textAlign","padding","actionsCellStyle","actions","localization","body","emptyDataSourceMessage","filterRow","filterTooltip","ElevationScroll","children","window","theme","useTheme","matchDown","useMediaQuery","breakpoints","down","drawerOpen","state","menu","responsiveTop","responsiveRight","responsiveLeft","trigger","useScrollTrigger","disableHysteresis","threshold","darkBorder","palette","mode","dark","grey","cloneElement","style","backgroundColor","default","zIndex","borderTop","borderBottom","borderColor","position","top","right","left","stateProps","headerValuesList","msgProp","callApi","toLowerCase","filteredVal","x","i","toString","indexOf","length","console","log"],"mappings":"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","file":"static/js/10.6532166f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, CardActions, Divider, CardContent } from '@mui/material';\r\nimport MaterialTable from 'material-table';\r\nimport Icons from 'ui-component/material-icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getInventoryLookupData, getLookupData, getLookup2Data, createOrUpdate, getSingleList, nullList } from 'store/actions/index';\r\nimport {\r\n    InputText,\r\n    CheckboxButton,\r\n    Register,\r\n    InputNumber,\r\n    DropDownLookup,\r\n    DropDown,\r\n    InputDate,\r\n    InputTime,\r\n    Growl,\r\n} from 'ui-component/globalcomponents';\r\nimport { validateLookup } from 'utilities/validateLookup';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport GlobalHeader from 'ui-component/globalcomponents/GlobalHeader/GlobalHeader';\r\nimport ElevationScroll from 'ui-component/ElevationScroll';\r\nimport { padding } from '@mui/system';\r\nlet FormName = 'MO';\r\n\r\nconst MoEntry = () => {\r\n    const [isDisable, setisDisable] = useState(false);\r\n    const [onBlurDisable, setOnBlurDisable] = useState(false);\r\n    const [rowEntryCode, setRowEntryCode] = useState('');\r\n    const [isLocationLookUp, setIsLocationLookUp] = useState(false);\r\n    const [isBoMLookUp, setIsBoMLookUp] = useState(false);\r\n    const [LoadingOnSave, setLoadingOnSave] = useState(false);\r\n    const [selectLookupVal, setSelected] = useState(true);\r\n    const [searchedRows, setSearchRows] = useState([]);\r\n    const [filter, setFilter] = useState(false);\r\n    const [saveFunction, dosaveFunction] = useState(0);\r\n    const [IsEditorView, setIsEditorView] = useState(false);\r\n    const [valueBasic, setValueBasic] = React.useState(new Date());\r\n    const [addItemClicked, setAddItemClicked] = useState(false);\r\n\r\n\r\n    const deleteProductHandler = (id) => {\r\n        setProductsData(productsData.filter((item) => item.id !== id));\r\n    };\r\n\r\n    // Dialog Handler\r\n    const handleDialogOk = () => {\r\n        setOpen(false);\r\n        formik.resetForm();\r\n    };\r\n\r\n    // add item handler\r\n    const handleAddItem = (addingData) => {\r\n        setProductsData([\r\n            ...productsData,\r\n            {\r\n                id: addingData.id,\r\n                product: addingData.name,\r\n                description: addingData.desc,\r\n                quantity: addingData.selectedQuantity,\r\n                amount: addingData.amount,\r\n                total: addingData.totalAmount\r\n            }\r\n        ]);\r\n\r\n        setAddItemClicked(false);\r\n    };\r\n\r\n    var lookupSelectRow = false;\r\n    var lookupTxtField;\r\n\r\n    const [Header, setHeader] = useState({\r\n        TransDate: new Date(),\r\n        TransNo: '',\r\n        TransType: 'MO',\r\n        LocationCode: '',\r\n        Location: '',\r\n        ItemCode: '',\r\n        Item: '',\r\n        UOMCode: '',\r\n        UOM: '',\r\n        RoutingCode: '',\r\n        RoutingName: '',\r\n        TransStatus: '',\r\n        UnitQuantity: '',\r\n        Quantity: '',\r\n        BaseQuantity: '',\r\n        MOStatus: '',\r\n        BOMID: ''\r\n    });\r\n\r\n    const [property, setProperty] = useState({\r\n        registerNotOpen: true,\r\n        viewList: false,\r\n        newList: false,\r\n        editList: false\r\n    });\r\n\r\n    const [ItemTable, SetItemTable] = useState({\r\n        columns: [\r\n            {\r\n                title: 'Item Code',\r\n                field: 'CItemCode',\r\n                align: 'left',\r\n                type: 'lookUp',\r\n                width: '20%',\r\n                render: (rowData) => <InputText value={rowData.CItemCode} name=\"shiftName\" disabled={isDisable} />\r\n            },\r\n\r\n            {\r\n                title: 'Item Name',\r\n                field: 'CItemName',\r\n                align: 'left',\r\n                type: 'text',\r\n                column: '40%',\r\n                render: (rowData) => <InputText value={rowData.CItemName} disabled={isDisable} />\r\n            },\r\n            {\r\n                title: 'UOM',\r\n                field: 'UOM',\r\n                align: 'left',\r\n                type: 'lookup',\r\n                width: '15%',\r\n                render: (rowData) => <InputText value={rowData.UOM} disabled={isDisable} />\r\n            },\r\n            {\r\n                title: 'Stage',\r\n                field: 'StageName',\r\n                type: 'lookup',\r\n                align: 'left',\r\n                width: '15%',\r\n                render: (rowData) => <InputText value={rowData.StageName} disabled={isDisable} />\r\n            },\r\n            {\r\n                title: 'Quantity',\r\n                field: 'Quantity',\r\n                type: 'textField',\r\n                align: 'right',\r\n                width: '10%',\r\n                render: (rowData) => <InputNumber symbol={false} value={rowData.Quantity} disabled={isDisable} />\r\n            }\r\n        ],\r\n        rows: []\r\n    });\r\n\r\n    const [locationLookupList, setLocationLookupList] = useState({\r\n        columns: [\r\n            {\r\n                title: 'Location Code',\r\n                field: 'LocationCode',\r\n                cellStyle: { border: '1px solid #ccc8c8', paddingTop: 1, paddingBottom: 1, width: '35%' },\r\n                headerStyle: { border: '1px solid #ccc8c8', fontWeight: 'bolder', background: '#e3dede', paddingTop: 1, width: '35%' }\r\n            },\r\n            {\r\n                title: 'Location',\r\n                field: 'LocationName',\r\n                cellStyle: { border: '1px solid #ccc8c8', paddingTop: 1, paddingBottom: 1, width: '35%' },\r\n                headerStyle: { border: '1px solid #ccc8c8', fontWeight: 'bolder', background: '#e3dede', paddingTop: 1, width: '35%' }\r\n            }\r\n        ],\r\n        rows: [\r\n            { LocationCode: '001', LocationName: 'Factory' },\r\n            { LocationCode: '002', LocationName: 'WareHouse' },\r\n            { LocationCode: '003', LocationName: 'Plant' }\r\n        ]\r\n    });\r\n    const [BoMLookupList, setBoMLookupList] = useState({\r\n        columns: [\r\n            {\r\n                title: 'Item Code',\r\n                field: 'ItemCode',\r\n                cellStyle: { border: '1px solid #ccc8c8', paddingTop: 1, paddingBottom: 1, width: '35%' },\r\n                headerStyle: { border: '1px solid #ccc8c8', fontWeight: 'bolder', background: '#e3dede', paddingTop: 1, width: '35%' }\r\n            },\r\n            {\r\n                title: 'Item',\r\n                field: 'ItemName',\r\n                cellStyle: { border: '1px solid #ccc8c8', paddingTop: 1, paddingBottom: 1, width: '35%' },\r\n                headerStyle: { border: '1px solid #ccc8c8', fontWeight: 'bolder', background: '#e3dede', paddingTop: 1, width: '35%' }\r\n            },\r\n            {\r\n                title: 'UoM code',\r\n                field: 'UOMCode',\r\n                cellStyle: { border: '1px solid #ccc8c8', paddingTop: 1, paddingBottom: 1, width: '35%' },\r\n                headerStyle: { border: '1px solid #ccc8c8', fontWeight: 'bolder', background: '#e3dede', paddingTop: 1, width: '35%' }\r\n            },\r\n            {\r\n                title: 'Routing Code',\r\n                field: 'RoutingName',\r\n                cellStyle: { border: '1px solid #ccc8c8', paddingTop: 1, paddingBottom: 1, width: '35%' },\r\n                headerStyle: { border: '1px solid #ccc8c8', fontWeight: 'bolder', background: '#e3dede', paddingTop: 1, width: '35%' }\r\n            }\r\n        ],\r\n        rows: [\r\n            { ItemCode: 'Buttons', ItemName: 'Buttons', UOMCode: 'NOS', RoutingName: 'Textile' },\r\n            { ItemCode: 'F-001', ItemName: 'Fabric 12/16', UOMCode: 'METER', RoutingName: '001' },\r\n            { ItemCode: 'MENS TROUSER', ItemName: 'MENS TROUSER', UOMCode: 'NOS', RoutingName: 'TEXTILE' },\r\n            { ItemCode: 'MENS T-SHIRT', ItemName: 'MENS T-SHIRT', UOMCode: 'NOS', RoutingName: 'TEXTILE' }\r\n        ]\r\n    });\r\n    const dispatch = useDispatch();\r\n    const lookupRes = useSelector(({ lookupRes }) => lookupRes);\r\n    const AllActionsRes = useSelector(({ AllActionsRes }) => AllActionsRes);\r\n    const onViewData = AllActionsRes?.singleList?.Message?.Header\r\n\r\n    useEffect(() => {\r\n        if (AllActionsRes.error) {\r\n            dispatch(nullList());\r\n        }\r\n        else if (AllActionsRes?.singleList) {\r\n            if (AllActionsRes?.singleList.Success === true) {\r\n                setHeader(AllActionsRes?.singleList?.Message.Header);\r\n                SetItemTable({\r\n                    ...ItemTable,\r\n                    rows: AllActionsRes?.singleList?.Message.Detail\r\n                });\r\n                dispatch(nullList());\r\n            } else {\r\n                setOnBlueDisable(false);\r\n            }\r\n        }\r\n    }, [AllActionsRes]);\r\n\r\n    const goback = () => {\r\n        setProperty((prevstate) => ({\r\n            ...prevstate,\r\n            registerNotOpen: true,\r\n            msg: ''\r\n        }));\r\n\r\n        setHeader({\r\n            TransDate: new Date(),\r\n            TransNo: '',\r\n            TransType: 'MO',\r\n            LocationCode: '',\r\n            Location: '',\r\n            ItemCode: '',\r\n            Item: '',\r\n            UOMCode: '',\r\n            UOM: '',\r\n            RoutingCode: '',\r\n            RoutingName: '',\r\n            TransStatus: '',\r\n            UnitQuantity: '',\r\n            Quantity: '',\r\n            BaseQuantity: '',\r\n            MOStatus: '',\r\n            BOMID: ''\r\n        });\r\n\r\n        SetItemTable((Prev) => ({\r\n            ...Prev,\r\n            rows: []\r\n        }));\r\n\r\n        setIsEditorView(false);\r\n\r\n        setisDisable(false);\r\n        // setOnBlurDisable(false)\r\n    };\r\n    const handleClose = () => {\r\n        setProperty((prevstate) => ({\r\n            ...prevstate,\r\n            registerNotOpen: true,\r\n            msg: ''\r\n        }));\r\n\r\n        setHeader({\r\n            TransDate: new Date(),\r\n            TransNo: '',\r\n            TransType: 'MO',\r\n            LocationCode: '',\r\n            Location: '',\r\n            ItemCode: '',\r\n            Item: '',\r\n            UOMCode: '',\r\n            UOM: '',\r\n            RoutingCode: '',\r\n            RoutingName: '',\r\n            TransStatus: '',\r\n            UnitQuantity: '',\r\n            Quantity: '',\r\n            BaseQuantity: '',\r\n            MOStatus: '',\r\n            BOMID: ''\r\n        });\r\n\r\n        SetItemTable((Prev) => ({\r\n            ...Prev,\r\n            rows: []\r\n        }));\r\n\r\n        setIsEditorView(false);\r\n\r\n        setisDisable(false);\r\n        // setOnBlurDisable(false)\r\n    };\r\n\r\n    const addData = (data) => {\r\n        setProperty((prevstate) => ({\r\n            ...prevstate,\r\n            registerNotOpen: false,\r\n            viewList: false,\r\n        }));\r\n        getLocationLookUpData();\r\n        getBoMLookUpData();\r\n\r\n        SetItemTable({\r\n            ...ItemTable,\r\n            rows: []\r\n        })\r\n\r\n    };\r\n\r\n    const editData = (row) => {\r\n        setIsEditorView(true);\r\n        setHeader(row);\r\n        SetItemTable({\r\n            ...ItemTable,\r\n            rows: lookupRes?.lookupData2?.Message.MODetail\r\n        });\r\n        setProperty((prevstate) => ({\r\n            ...prevstate,\r\n            registerNotOpen: false,\r\n            viewList: false,\r\n        }));\r\n        getLocationLookUpData();\r\n        getBoMLookUpData();\r\n        // setHeader({\r\n        //   TransDate: row.TransDate,\r\n        //   TransNo: row.TransNo,\r\n        //   TransType: row.TransType,\r\n        //   LocationCode: row.LocationCode,\r\n        //   Location: row.Location,\r\n        //   ItemCode: \"\",\r\n        //   Item: \"\",\r\n        //   UOMCode: \"\",\r\n        //   UOM: \"\",\r\n        //   RoutingCode: \"\",\r\n        //   RoutingName: \"\",\r\n        //   TransStatus: \"\",\r\n        //   UnitQuantity: \"\",\r\n        //   Quantity: \"\",\r\n        //   BaseQuantity: \"\",\r\n        //   MOStatus: \"\",\r\n        //   BOMID: \"\",\r\n\r\n        // })\r\n        // setProperty((prevState) => ({\r\n        //     ...prevState,\r\n        //     dialogNotOpen: true,\r\n\r\n        // }))\r\n        // setOnBlurDisable(true)\r\n    };\r\n\r\n    const viewData = (row) => {\r\n        setIsEditorView(true);\r\n        setProperty((prevState) => ({\r\n            ...prevState,\r\n            CodeMsg: '',\r\n            registerNotOpen: false,\r\n            viewList: true\r\n        }));\r\n\r\n        let payload = `FormName=${'MOEntry'}&TransNo=${row.TransNo}`\r\n        dispatch(getSingleList(payload));\r\n        setHeader({\r\n            ...Header,\r\n            RoutingName: onViewData?.RoutingName\r\n        })\r\n        setisDisable(true);\r\n    };\r\n\r\n    const SetRowDataID = (data, Button) => {\r\n        if (Button === 'Delete') {\r\n            if (data.TransStatus == '1') {\r\n                setProperty({\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: 'This entry cannot b deleted',\r\n                    registerNotOpen: true\r\n                });\r\n                setRowEntryCode('');\r\n            } else {\r\n                setRowEntryCode(data.TransNo);\r\n            }\r\n        }\r\n    };\r\n\r\n    const validationOnSave = () => {\r\n        if (Header.ItemCode === '' || Header.ItemCode === undefined || Header.ItemCode === null) {\r\n            setProperty({\r\n                open: true,\r\n                severity: 'error',\r\n                msg: 'Empty BoM Code Not Allowed'\r\n            });\r\n            return false;\r\n\r\n        } else if (Header.Quantity === '' || Header.Quantity === undefined || Header.Quantity === null) {\r\n            setProperty({\r\n                open: true,\r\n                severity: 'error',\r\n                msg: 'Empty Qunatity Not Allowed'\r\n            });\r\n            return false;\r\n\r\n        } else if (Header.Location === '' || Header.Location === undefined || Header.ShiftHeaLocationd === null) {\r\n            setProperty({\r\n                open: true,\r\n                severity: 'error',\r\n                msg: 'Empty Location Not Allowed'\r\n            });\r\n            return false;\r\n\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const HandleSave = () => {\r\n        if (validationOnSave()) {\r\n            let MODetails = Header.MOStatus === 'Release' ? [...lookupRes?.lookupData2?.Message?.MODetail] : []\r\n\r\n            let payload = {\r\n                FormName,\r\n                Header,\r\n                Detail: MODetails\r\n            };\r\n\r\n            dispatch(createOrUpdate(payload));\r\n\r\n            setHeader({\r\n                TransDate: new Date(),\r\n                TransNo: '',\r\n                TransType: 'MO',\r\n                LocationCode: '',\r\n                Location: '',\r\n                ItemCode: '',\r\n                Item: '',\r\n                UOMCode: '',\r\n                UOM: '',\r\n                RoutingCode: '',\r\n                RoutingName: '',\r\n                TransStatus: '',\r\n                UnitQuantity: '',\r\n                Quantity: '',\r\n                BaseQuantity: '',\r\n                MOStatus: ''\r\n            });\r\n\r\n            setProperty((prevState) => ({\r\n                ...prevState,\r\n                registerNotOpen: true,\r\n                open: false,\r\n                severity: null,\r\n                msg: ''\r\n            }));\r\n\r\n            SetItemTable((prev) => ({\r\n                ...prev,\r\n                rows: []\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleSnakeBarClose = () => {\r\n        setProperty({ ...property, open: false });\r\n    };\r\n\r\n    const changeLookupVal = (property, value) => {\r\n        lookupTxtField = value;\r\n        lookupSelectRow = false;\r\n        // Header[property] = value;\r\n        // setHeader({ ...Header,  })\r\n    };\r\n\r\n    const setLookUpData = (e, rowData, Lookupname) => {\r\n        let value = e.target.value;\r\n        if (Lookupname == 'Location') {\r\n            setHeader({\r\n                ...Header,\r\n                Location: rowData?.Location,\r\n                LocationCode: rowData?.LocationCode\r\n            });\r\n            setIsLocationLookUp(false);\r\n        } else if (Lookupname == 'BoMCode') {\r\n            setHeader({\r\n                ...Header,\r\n                Item: rowData?.ItemName,\r\n                ItemCode: rowData?.ItemCode,\r\n                UOM: rowData?.UOM,\r\n                UOMCode: rowData?.UOMCode,\r\n                UnitQuantity: rowData?.UnitQty,\r\n                RoutingName: rowData?.RoutingName,\r\n                RoutingCode: rowData?.RoutingCode,\r\n                BOMID: rowData?.BOMID\r\n            });\r\n\r\n            setIsBoMLookUp(false);\r\n        }\r\n    };\r\n\r\n    const getLocationLookUpData = () => {\r\n        dispatch(getInventoryLookupData(`FormName=${'Locations'}`));\r\n    };\r\n    const getBoMLookUpData = () => {\r\n        dispatch(getLookupData(`FormName=ActiveBOM`));\r\n    };\r\n\r\n    const getMoEntryData = () => {\r\n        dispatch(getLookup2Data(`FormName=MOEntry&BOMID=${Header.BOMID}&Qty=${Header.BaseQuantity}`));\r\n    };\r\n\r\n    const setMOStatus = (val) => {\r\n        if (val === 'Release') {\r\n            if (validationOnSave()) {\r\n                getMoEntryData();\r\n                setHeader((prevState) => ({\r\n                    ...prevState,\r\n                    MOStatus: val\r\n                }));\r\n            }\r\n        } else {\r\n            if (validationOnSave()) {\r\n                setHeader((prevState) => ({\r\n                    ...prevState,\r\n                    MOStatus: val\r\n                }));\r\n                SetItemTable({\r\n                    ...ItemTable,\r\n                    rows: [],\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    const clearAll = () => {\r\n        setHeader(\r\n            {\r\n                ...Header,\r\n                TransDate: new Date(),\r\n                TransNo: '',\r\n                TransType: 'MO',\r\n                TransStatus: '',\r\n                UnitQuantity: '',\r\n                Quantity: '',\r\n                BaseQuantity: '',\r\n                MOStatus: '',\r\n            }\r\n        )\r\n    }\r\n\r\n    // useEffect(() => {\r\n\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        if (lookupRes?.lookupDataInventory) {\r\n            if (lookupRes?.lookupDataInventory.Success === true) {\r\n                setLocationLookupList(lookupRes.lookupDataInventory.Message.Location);\r\n            } else {\r\n                setProperty({\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: 'Some Thing Went Wrong'\r\n                });\r\n            }\r\n        }\r\n    }, [lookupRes?.lookupDataInventory]);\r\n\r\n    useEffect(() => {\r\n        if (lookupRes?.lookupData) {\r\n            if (lookupRes?.lookupData?.Success === true) {\r\n                setBoMLookupList(lookupRes?.lookupData?.Message.BOM);\r\n            } else {\r\n                setProperty({\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: 'Some Thing Went Wrong'\r\n                });\r\n            }\r\n        }\r\n    }, [lookupRes?.lookupData]);\r\n\r\n    useEffect(() => {\r\n        if (lookupRes?.lookupData2) {\r\n            if (lookupRes?.lookupData2?.Success === true) {\r\n                SetItemTable({\r\n                    ...ItemTable,\r\n                    rows: lookupRes?.lookupData2?.Message.MODetail\r\n                });\r\n            } else {\r\n                setProperty({\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: 'Some Thing Went Wrong'\r\n                });\r\n            }\r\n        }\r\n    }, [lookupRes?.lookupData2]);\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12}>\r\n                <Growl property={property} close={handleSnakeBarClose} onClick={handleSnakeBarClose} />\r\n            </Grid>\r\n            {property.registerNotOpen ? (\r\n                <Grid container>\r\n                    <Register\r\n                        Details={'MO Entry List'}\r\n                        FormName={FormName}\r\n                        DialogClose={handleClose}\r\n                        // FormID={constant.GeneralEntryFormID}\r\n                        dialog={true}\r\n                        AddData={addData}\r\n                        EditData={editData}\r\n                        SetRowDataID={SetRowDataID}\r\n                        dosaveFunction={dosaveFunction}\r\n                        setLoadingOnSave={setLoadingOnSave}\r\n                        ID={rowEntryCode}\r\n                        ViewData={viewData}\r\n                        FormID={FormName}\r\n                        FormCode={'TransNo'}\r\n                        isPostButton={true}\r\n                        isEditButton={true}\r\n                    />\r\n                </Grid>\r\n            ) : (\r\n                <>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <MainCard>\r\n                                <ElevationScroll>\r\n                                    <CardActions>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <GlobalHeader\r\n                                                    // loading={LoadingOnSave}\r\n                                                    goBack={() => goback()}\r\n                                                    clearAll_OnClick={() => clearAll()}\r\n                                                    clearAll={property.newList}\r\n                                                    saveAndClose={!property.viewList}\r\n                                                    saveAndClose_OnClick={() => {\r\n                                                        saveAndClose();\r\n                                                    }}\r\n                                                    FormID={1}\r\n                                                    submitButton={!property.viewList}\r\n                                                    SaveButton={!property.viewList}\r\n                                                    Button2={!property.newList}\r\n                                                    submit={!property.viewList}\r\n                                                    SaveButton_OnClick={() => HandleSave()}\r\n                                                    submitButton_OnClick={() => postAndSave()}\r\n                                                    Button2_OnClick={() => printVoucher()}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardActions>\r\n                                </ElevationScroll>\r\n                                <Divider />\r\n                                <CardContent>\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item xs={4}>\r\n                                            <InputText label=\"MO Number\" name=\"TransNo\" value={Header.TransNo} disabled={true} />\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <InputDate\r\n                                                id=\"MODate\"\r\n                                                label=\"MO Date*\"\r\n                                                name=\"TransaDate\"\r\n                                                value={Header.TransDate}\r\n                                                Change={(date) => setHeader({ ...Header, TransDate: date })}\r\n                                                disabled={isDisable}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={4}>\r\n                                            <DropDownLookup\r\n                                                disabled={isDisable}\r\n                                                // disabled={property.viewList}\r\n                                                label=\"Location*\"\r\n                                                name=\"Location\"\r\n                                                reference={'Location'}\r\n                                                onClick={() => setIsLocationLookUp(true)}\r\n                                                lookupOpen={isLocationLookUp}\r\n                                                columns={locationLookupList.columns}\r\n                                                rows={locationLookupList?.rows}\r\n                                                onBlurDiv={() => setIsLocationLookUp(false)}\r\n                                                onFocus={() => setSelected(false)}\r\n                                                onBlur={(e) => {\r\n                                                    setTimeout(() => {\r\n                                                        setFilter(false);\r\n                                                        validateLookup(\r\n                                                            {\r\n                                                                setProperty,\r\n                                                                property,\r\n                                                                Header,\r\n                                                                setHeader,\r\n                                                                selectLookupVal,\r\n                                                                lookupSelectRow\r\n                                                            },\r\n                                                            lookupTxtField,\r\n                                                            locationLookupList.rows,\r\n                                                            ['LocationCode', 'Location'],\r\n                                                            ['Code', 'Description'],\r\n                                                            'Location Code'\r\n                                                        );\r\n                                                        setIsLocationLookUp(false);\r\n                                                    }, 200);\r\n                                                }}\r\n                                                changeLookupVal={changeLookupVal}\r\n                                                propertyName=\"LocationCode\"\r\n                                                listForSearch={locationLookupList?.rows}\r\n                                                setSearchRowProp={(searchResult) => {\r\n                                                    setSearchRows(searchResult);\r\n                                                }}\r\n                                                // rows={filter ? searchedRows : bomCode.rows}\r\n                                                setFilterProp={(filter) => setFilter(filter)}\r\n                                                setLookupEnable={() => setProperty((prevState) => ({ ...prevState, bomCodeLookUp: true }))}\r\n                                                value={Header.Location}\r\n                                                lookupValuesList={['LocationCode', 'Location']}\r\n                                                setLookUpData={(e, rowData) => setLookUpData(e, rowData, 'Location')}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={4}>\r\n                                            <DropDownLookup\r\n                                                disabled={isDisable}\r\n                                                label=\"BoM Code*\"\r\n                                                reference={'BoM Code'}\r\n                                                onClick={() => setIsBoMLookUp(true)}\r\n                                                lookupOpen={isBoMLookUp}\r\n                                                columns={BoMLookupList.columns}\r\n                                                rows={BoMLookupList?.rows}\r\n                                                onBlurDiv={() => setIsBoMLookUp(false)}\r\n                                                onFocus={() => setSelected(false)}\r\n                                                onBlur={(e) => {\r\n                                                    setTimeout(() => {\r\n                                                        setFilter(false);\r\n                                                        validateLookup(\r\n                                                            {\r\n                                                                setProperty,\r\n                                                                property,\r\n                                                                Header,\r\n                                                                setHeader,\r\n                                                                selectLookupVal,\r\n                                                                lookupSelectRow\r\n                                                            },\r\n                                                            lookupTxtField,\r\n                                                            BoMLookupList?.rows,\r\n                                                            ['LocationCode', 'Location'],\r\n                                                            ['Code', 'Description'],\r\n                                                            'Location Code'\r\n                                                        );\r\n                                                        setIsBoMLookUp(false);\r\n                                                    }, 200);\r\n                                                }}\r\n                                                changeLookupVal={changeLookupVal}\r\n                                                propertyName=\"ItemCode\"\r\n                                                listForSearch={BoMLookupList?.rows}\r\n                                                setSearchRowProp={(searchResult) => {\r\n                                                    setSearchRows(searchResult);\r\n                                                }}\r\n                                                // rows={filter ? searchedRows : bomCode.rows}\r\n                                                setFilterProp={(filter) => setFilter(filter)}\r\n                                                setLookupEnable={() => setProperty((prevState) => ({ ...prevState, bomCodeLookUp: true }))}\r\n                                                value={Header.ItemCode}\r\n                                                lookupValuesList={['ItemCode', 'Item', 'UoMCode', 'RoutingCode']}\r\n                                                setLookUpData={(e, rowData) => setLookUpData(e, rowData, 'BoMCode')}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <InputText\r\n                                                label=\"Item Name\"\r\n                                                name=\"Item\"\r\n                                                value={Header.Item}\r\n                                                Change={(e) => setHeader({ ...Header, Item: e.target.value })}\r\n                                                disabled={isDisable}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={4}>\r\n                                            <InputNumber\r\n                                                label=\"MO Quantity\"\r\n                                                name=\"Quantity\"\r\n                                                value={Header.Quantity}\r\n                                                symbol={false}\r\n                                                Change={(e) =>\r\n                                                    setHeader({\r\n                                                        ...Header,\r\n                                                        Quantity: e.target.value,\r\n                                                        BaseQuantity: e.target.value * Header.UnitQuantity\r\n                                                    })\r\n                                                }\r\n                                                disabled={isDisable}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={4}>\r\n                                            <InputText\r\n                                                label=\"UoM\"\r\n                                                name=\"UOM\"\r\n                                                value={Header.UOM}\r\n                                                Change={(e) => setHeader({ ...Header, UOM: e.target.value })}\r\n                                                disabled={isDisable}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={4}>\r\n                                            <InputText\r\n                                                // style={{ width: 500 }}\r\n                                                label=\"Routing\"\r\n                                                name=\"Routing\"\r\n                                                value={Header.RoutingName ? Header.RoutingName : Header.RoutingCode}\r\n                                                Change={(e) => setHeader({ ...Header, RoutingName: e.target.value })}\r\n                                                disabled={isDisable}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            {\r\n                                                property.viewList === true ? <InputText\r\n                                                    label=\"Status\"\r\n                                                    name=\"Status\"\r\n                                                    value={Header.MOStatus}\r\n                                                    disabled={property.viewList}\r\n                                                />\r\n                                                    :\r\n                                                    <DropDown\r\n                                                        list={['Release', 'Not Release']}\r\n                                                        label={'Status'}\r\n                                                        name=\"MOStatus\"\r\n                                                        id={'Status'}\r\n                                                        // value={onViewData?.MOStatus ? onViewData?.MOStatus : Header.MOStatus}\r\n                                                        value={Header.MOStatus}\r\n                                                        Change={(e) => {\r\n                                                            setMOStatus(e.target.value);\r\n                                                        }}\r\n                                                        disabled={isDisable}\r\n\r\n                                                    />\r\n                                            }\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                            </MainCard>\r\n                            <br />\r\n\r\n                            <Grid container spacing={2} alignItems=\"center\">\r\n                                <Grid item xs={12}>\r\n                                    <MaterialTable\r\n                                        // isLoading={loading}\r\n                                        columns={ItemTable.columns}\r\n                                        data={ItemTable.rows}\r\n                                        icons={Icons}\r\n                                        options={{\r\n                                            showTitle: false,\r\n                                            toolbar: false,\r\n                                            actionsColumnIndex: -1,\r\n                                            pageSize: 5,\r\n                                            pageSizeOptions: [5, 10, 20, 30],\r\n                                            search: false,\r\n                                            headerStyle: {\r\n                                                fontWeight: 'bold',\r\n                                                // paddingLeft: '10px',\r\n                                                // paddingRight: '0px',\r\n                                                // paddingTop: '5px',\r\n                                                // paddingBottom: '10px',\r\n                                                textAlign: 'left',\r\n                                                padding: '15px'\r\n\r\n                                            },\r\n                                            actionsCellStyle: {\r\n                                                justifyContent: 'center', alignItems: 'center', width: 20\r\n                                            }\r\n                                        }}\r\n                                        actions={[\r\n                                        ]}\r\n                                        localization={{\r\n                                            body: {\r\n                                                emptyDataSourceMessage: 'No records to display',\r\n                                                filterRow: {\r\n                                                    filterTooltip: 'Filter'\r\n                                                }\r\n                                            }\r\n                                        }}\r\n\r\n                                    />\r\n                                </Grid>\r\n                                {/* <Grid item xs={12}>\r\n                                        <ProductsPage\r\n                                            columns={ItemTable.columns}\r\n                                            rows={ItemTable.rows}\r\n                                            deleteProductHandler={deleteProductHandler}\r\n                                            allowDelete={false}\r\n                                        />\r\n                                    </Grid> */}\r\n                                {/* {addItemClicked ? (\r\n                                        <Grid item xs={12}>\r\n                                            <AddItemPage handleAddItem={handleAddItem} setAddItemClicked={setAddItemClicked} />\r\n                                        </Grid>\r\n                                    ) : (\r\n                                        <Grid item>\r\n                                            <Button variant=\"text\" onClick={() => setAddItemClicked(true)}>\r\n                                                + Add Item\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    )} */}\r\n\r\n                                {/* <Grid item xs={4}></Grid> */}\r\n\r\n                                {/* <Grid item xs={4}>\r\n                                                <Button variant=\"contained\" color=\"primary\" onClick={HandleSave} disabled={isDisable}>\r\n                                                    Save\r\n                                                </Button>\r\n                                                <Button style={{ marginLeft: 30 }} variant=\"outlined\" onClick={handleClose}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                            </Grid> */}\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoEntry;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useMediaQuery, useScrollTrigger } from '@mui/material';\r\n\r\n// project import\r\nimport { useSelector } from 'store';\r\n\r\n// ==============================|| elevation scroll ||============================== //\r\nfunction ElevationScroll({ children, window }) {\r\n    const theme = useTheme();\r\n    const matchDown = useMediaQuery(theme.breakpoints.down('lg'));\r\n\r\n    const { drawerOpen } = useSelector((state) => state.menu);\r\n\r\n    const fullStickyLeft = drawerOpen ? 281 : 42;\r\n\r\n    const responsiveTop = matchDown ? 80 : 83;\r\n    const responsiveRight = matchDown ? 38 : 41;\r\n    const responsiveLeft = matchDown ? 38 : fullStickyLeft;\r\n\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 180,\r\n        target: window || undefined\r\n    });\r\n\r\n    const darkBorder = theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.grey[200];\r\n\r\n    return React.cloneElement(children, {\r\n        style: {\r\n            backgroundColor: theme.palette.background.default,\r\n            zIndex: 1099,\r\n            borderTop: trigger ? '1px solid' : 'none',\r\n            borderBottom: trigger ? '1px solid' : 'none',\r\n            borderColor: trigger ? darkBorder : '',\r\n            position: trigger ? 'fixed' : 'relative',\r\n\r\n            top: trigger ? responsiveTop : 'auto',\r\n            right: trigger ? responsiveRight : 'auto',\r\n            left: trigger ? responsiveLeft : 'auto'\r\n        }\r\n    });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n    children: PropTypes.node,\r\n    window: PropTypes.object\r\n};\r\n\r\nexport default ElevationScroll;\r\n","\r\nexport function validateLookup(stateProps, value, listForSearch, headerValuesList, lookupValuesList, msgProp, callApi, setLookUpData) {\r\n\r\n    if (stateProps.lookupSelectRow === false) {\r\n        if (value !== undefined) {\r\n            value = value.toLowerCase()\r\n            if (!stateProps.selectLookupVal) {\r\n                let filteredVal = listForSearch.filter((x, i) => x[lookupValuesList[0]].toString().toLowerCase().indexOf(value) > -1 ||\r\n                    x[lookupValuesList[1]].toString().toLowerCase().indexOf(value) > -1)\r\n                if (filteredVal.length === 0 && value) {\r\n                    stateProps.setProperty((prevState) => ({\r\n                        ...prevState,\r\n                        open: true,\r\n                        severity: 'error',\r\n                        msg: `Invalid ${msgProp}`,\r\n                    }));\r\n                    for (let i = 0; i < headerValuesList.length; i++) {\r\n                        stateProps.Header[headerValuesList[i]] = \"\"\r\n                        stateProps.setHeader({ ...stateProps.Header })\r\n                    }\r\n                    console.log({ Header: stateProps.Header })\r\n                    // stateProps.setHeader({ ...stateProps.Header })\r\n                }\r\n                else if (filteredVal.length && value) {\r\n                    if (callApi) {\r\n                        switch (msgProp) {\r\n                            case \"Customers\":\r\n                                setLookUpData(null, filteredVal[0], \"Customers\")\r\n                                break;\r\n                            case \"Item\":\r\n                                setLookUpData(null, filteredVal[0], \"Item\")\r\n                                break;\r\n                            case \"Routing\":\r\n                                setLookUpData(null, filteredVal[0], \"Routing\")\r\n                                break;\r\n                            default:\r\n                                setLookUpData(\"donor\", filteredVal[0], headerValuesList, lookupValuesList)\r\n                                break;\r\n\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                    else {\r\n                        for (var i = 0; i < headerValuesList.length; i++) {\r\n                            stateProps.Header[headerValuesList[i]] = filteredVal[0][lookupValuesList[i]]\r\n                            stateProps.setHeader({ ...stateProps.Header })\r\n                        }\r\n\r\n                        if (msgProp === 'Bank') {\r\n                            // const dispatch = useDispatch();\r\n                            setLookUpData(filteredVal[0]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (value === '') {\r\n            for (let i = 0; i < headerValuesList.length; i++) {\r\n                stateProps.Header[headerValuesList[i]] = \"\";\r\n                stateProps.setHeader({ ...stateProps.Header })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function validateLookupinJV(stateProps, value, listForSearch, rowData, filterFlag, headerValuesList, lookupValuesList, msgProp) {\r\n    if (stateProps.lookupSelectRow === false) {\r\n        if (value !== undefined) {\r\n            if (!stateProps.selectLookupVal) {\r\n                let filteredVal = listForSearch.filter((x, i) => x[lookupValuesList[0]].toLowerCase().indexOf(value) > -1 || x[lookupValuesList[1]].toLowerCase().indexOf(value) > -1)\r\n                if (filteredVal.length === 0 && value) {\r\n                    stateProps.setProperty({\r\n                        ...stateProps.property,\r\n                        open: true,\r\n                        severity: 'error',\r\n                        msg: `Invalid ${msgProp}`,\r\n                    });\r\n                    for (let i = 0; i < headerValuesList.length; i++) {\r\n                        let index = stateProps.JV.indexOf(rowData);\r\n                        stateProps.JV[index][headerValuesList[i]] = \"\"\r\n                        stateProps.setJV({ ...stateProps.JV })\r\n                    }\r\n                    stateProps.setJV({ ...stateProps.JV })\r\n                }\r\n                else if (filteredVal.length && value && filterFlag === false) {\r\n                    for (let i = 0; i < headerValuesList.length; i++) {\r\n                        let index = stateProps.JV.indexOf(rowData);\r\n                        stateProps.JV[index][headerValuesList[i]] = filteredVal[0][lookupValuesList[i]]\r\n                        stateProps.setJV({ ...stateProps.JV });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (value === '') {\r\n            for (let i = 0; i < headerValuesList.length; i++) {\r\n                let index = stateProps.JV.indexOf(rowData);\r\n                stateProps.JV[index][headerValuesList[i]] = \"\"\r\n                stateProps.setJV({ ...stateProps.JV })\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}
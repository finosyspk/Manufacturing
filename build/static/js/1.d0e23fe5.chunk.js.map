{"version":3,"sources":["store/actions/Login.js","store/actions/AllActions.js","store/actions/Lookup.js","ui-component/globalcomponents/InputText.js","ui-component/globalcomponents/Growl.js","ui-component/globalcomponents/Dropdown.js","ui-component/globalcomponents/InputNumber.js","ui-component/globalcomponents/InputDate.js","views/forms/plugins/Modal/SimpleModal.js","views/forms/plugins/Modal/ServerModal.js","views/forms/plugins/Modal/index.js","ui-component/globalcomponents/Register.js","ui-component/globalcomponents/Lookup/DropDownLookup.js","ui-component/globalcomponents/Lookup/PopupLookup.js","ui-component/globalcomponents/CheckboxButton.js","ui-component/globalcomponents/InputTime.js","ui-component/globalcomponents/NumberAlignment.js","ui-component/globalcomponents/ReusableDialog.js","ui-component/material-icons.js","ui-component/globalcomponents/GlobalHeader/GlobalHeader.js","ui-component/extended/Form/InputLabel.js"],"names":["login_null","type","LOGIN_NULL","signinManufacture","payload","LOGIN_MANUFACTURE","getAll","GET_ALL_LIST","insertAll","INSERT_LIST","createOrUpdate","CREATE_OR_UPDATE_LIST","updateAll","UPDATE_LIST","deleteAll","DELETE_LIST","getSingleList","GET_SINGLE_LIST","postList","POST_LIST","nullList","NULL_LIST","getLookupData","GET_LOOKUP_DATA","getInventoryLookupData","GET_INVENTORY_LOOKUP_DATA","getInventoryLookupData1","GET_INVENTORY_LOOKUP_DATA1","getInventoryLookupData2","GET_INVENTORY_LOOKUP_DATA2","getLookup2Data","GET_LOOKUP_2_DATA","getLookup3Data","GET_LOOKUP_3_DATA","nullLookup","LOOKUP_NULL","nullLookup1","LOOKUP_NULL1","nullLookup2","LOOKUP_NULL2","nullLookup3","LOOKUP_NULL3","nullLookupInventory","LOOKUP_INVENTORY_NULL","nullLookupInventory1","LOOKUP_INVENTORY_NULL1","nullLookupInventory2","LOOKUP_INVENTORY_NULL2","InputText","props","useState","error","open","severity","property","setProperty","handleClose","event","reason","Growl","close","onClick","TextField","fullWidth","iserror","id","label","helperText","value","onChange","Change","onFocus","Focus","onBlur","Blur","disabled","placeholder","onInput","e","maxLength","target","Math","max","parseInt","toString","slice","InputProps","autoComplete","form","min","style","textAlign","readOnly","shrink","startAdornment","symbol","InputAdornment","position","symbolIcon","endAdornment","lookup","className","Button","fontSize","Snackbar","anchorOrigin","vertical","horizontal","marginTop","autoHideDuration","onClose","elevation","variant","msg","DropDown","list","select","text","length","map","item","index","code","MenuItem","InputNumber","numField","width","height","border","customInput","NumberAlignment","thousandSeparator","prefix","isNumericString","decimalScale","fixedDecimalScale","format","onValueChange","valueChange","display","mask","InputDate","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","color","inputFormat","renderInput","params","rand","round","random","getModalStyle","top","left","transform","Body","React","forwardRef","ref","modalStyle","handleDelete","handlePost","isPost","message","tabIndex","MainCard","sx","xs","lg","title","content","secondary","IconButton","size","CardContent","Grid","container","justifyContent","Typography","alignItem","mt","Divider","CardActions","marginLeft","SimpleModal","onDelete","onPost","propTypes","PropTypes","object","func","ModalWrapper","styled","marginBottom","flexGrow","minWidth","zIndex","ServerModal","rootRef","useRef","disablePortal","disableEnforceFocus","disableAutoFocus","p","alignItems","current","Modal","newList","editList","constant","constants","getConstant","Register","theme","useTheme","deleteBox","setDeleteBox","setloadingDelete","msgString","setMsgString","selectedList","setSelectedList","columns","rows","List","setList","loading","setLoading","setPost","menuAnchor","setMenuAnchor","menuOpen","setMenuOpen","getRow","setRow","setisPost","dispatch","useDispatch","pageSize","setPageSize","OpenDeleteModal","hide","useEffect","FormName","openDrawer","AllActionsRes","useSelector","dosaveFunction","Success","Message","dialogOpen","loadingOnSave","insertData","hideDialog","FormID","FinancialBatchFormID","InventoryBatchFormID","PurchaseBatchFormID","SalesBatchFormID","Type","Module","setLoadingOnSave","updateData","undefined","createOrUpdateData","DialogClose","save","saveProps","deleteData","saveFunction","Skeleton","padding","data","onChangeRowsPerPage","pageChange","localization","body","emptyDataSourceMessage","filterRow","filterTooltip","icons","Icons","options","showTitle","toolbar","actionsColumnIndex","pageSizeOptions","search","headerStyle","fontWeight","paddingRight","paddingTop","paddingBottom","actions","rowData","icon","tooltip","row","anchorElement","currentTarget","openMenu","Tooltip","Fab","component","AddData","borderRadius","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","bottom","right","speedDial","Menu","keepMounted","anchorEl","ViewData","isEditButton","SubmitStatus","EditData","UseCount","SetRowDataID","isPostButton","Status","Posted","ID","FormCode","FormNameIDValue","TransNo","LocationCode","DropDownLookup","reference","searchValue","console","log","lookupValuesList","listForSearch","toUpperCase","searchResult","filter","val","includes","setSearchRowProp","setFilterProp","Fragment","setLookupEnable","changeLookupVal","propertyName","marginRight","focus","onBlurDiv","lookupOpen","jv","onRowClick","setLookUpData","paging","sorting","searchFieldStyle","PopupLookup","lookUpFilter","LookUpOpen","LookUpClose","Dialog","maxWidth","large","disableTypography","LookUpHeading","DialogContent","LookupList","boxShadow","changeSize","selection","rowStyle","x","tableData","backgroundColor","filtering","filterCellStyle","showTextRowsSelected","onSelectionChange","DialogActions","ok","CheckboxButton","FormControlLabel","defaultChecked","control","Checkbox","checked","InputTime","Time","Date","toLocaleTimeString","defaultValue","InputLabelProps","withStyles","root","Transition","direction","ReusableDialog","IsOpen","TransitionComponent","widthAllow","Title","Close","ShowSave","ButtonTitle2","Save","ButtonTitle1","ButtonTitle3","tableIcons","Add","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","GlobalHeader","palette","grey","name","goBack","copyBom","SaveButton_OnClick","clearAll_OnClick","backDisabled","ariaLabel","openIcon","action","tooltipTitle","hidden","BInputLabel","shouldForwardProp","prop","primary","InputLabel","children","others","defaultProps"],"mappings":"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","file":"static/js/1.d0e23fe5.chunk.js","sourcesContent":["import { LOGIN, SIGNUP, LOGOUT, LOGIN_NULL, LOGIN_MANUFACTURE } from \"../types\";\r\n\r\n\r\nexport const signup = (payload) => {\r\n    return {\r\n        type: SIGNUP,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const signin = (payload) => {\r\n    return {\r\n        type: LOGIN,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const logout = (payload) => {\r\n    return {\r\n        type: LOGOUT,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const login_null = () => {\r\n    return {\r\n        type: LOGIN_NULL\r\n    };\r\n}\r\n\r\nexport const signinManufacture = (payload) => {\r\n    return {\r\n        type: LOGIN_MANUFACTURE,\r\n        payload\r\n    };\r\n}\r\n","import {\r\n    GET_ALL_LIST, INSERT_LIST, UPDATE_LIST, DELETE_LIST, NULL_LIST, GET_SINGLE_LIST, POST_LIST,\r\n    GET_ALL_RECORDS, GET_ALL_ENTRIES, SAVE_IMPORTDATA, GET_BANKS_TRANSACTIONS, DASH_BOARD_DATA,\r\n    CREATE_OR_UPDATE_LIST,\r\n    POST_CURRENCY_REVALUATION,\r\n    SAVE_BANK_RECONCILIATION,\r\n    INSERT_INSERTRECORD,\r\n\r\n\r\n} from \"../types\";\r\n\r\nexport const getAll = (payload) => {\r\n    return {\r\n        type: GET_ALL_LIST,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getAllRecords = (payload) => {\r\n\r\n    return {\r\n        type: GET_ALL_RECORDS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getAllEntries = (payload) => {\r\n\r\n    return {\r\n        type: GET_ALL_ENTRIES,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const insertPFRecord = (payload) => {\r\n    return {\r\n        type: INSERT_INSERTRECORD,\r\n        payload\r\n    };\r\n}\r\n\r\n\r\n\r\nexport const insertAll = (payload) => {\r\n    return {\r\n        type: INSERT_LIST,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const createOrUpdate = (payload) => {\r\n    return {\r\n        type: CREATE_OR_UPDATE_LIST,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const updateAll = (payload) => {\r\n    return {\r\n        type: UPDATE_LIST,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const deleteAll = (payload) => {\r\n    return {\r\n        type: DELETE_LIST,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getSingleList = (payload) => {\r\n\r\n\r\n    return {\r\n        type: GET_SINGLE_LIST,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const postList = (payload) => {\r\n\r\n\r\n    return {\r\n        type: POST_LIST,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const nullList = () => {\r\n\r\n    return {\r\n        type: NULL_LIST,\r\n\r\n    };\r\n}\r\n\r\nexport const postCurrencyReval = (payload) => {\r\n\r\n    return {\r\n        type: POST_CURRENCY_REVALUATION,\r\n    }\r\n}\r\nexport const saveImportData = (payload) => {\r\n    return {\r\n        type: SAVE_IMPORTDATA,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getBanksTransaction = (payload) => {\r\n    return {\r\n        type: GET_BANKS_TRANSACTIONS,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const saveBankReconciliation = (payload) => {\r\n    return {\r\n        type: SAVE_BANK_RECONCILIATION,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getDashBoardData = () => {\r\n    return {\r\n        type: DASH_BOARD_DATA,\r\n\r\n    };\r\n}\r\n","import { GET_LOOKUP_DATA,GET_LOOKUP_2_DATA,GET_LOOKUP_3_DATA, GET_LOOKUP_4_DATA, GET_LOOKUP_5_DATA, GET_LOOKUP_6_DATA,\r\n        GET_LOOKUP_7_DATA, GET_LOOKUP_8_DATA, GET_LOOKUP_9_DATA, GET_LOOKUP_10_DATA, GET_LOOKUP_11_DATA, GET_LOOKUP_12_DATA, GET_LOOKUP_13_DATA,\r\n        GET_LOOKUP_14_DATA, GET_LOOKUP_15_DATA,GET_INVENTORY_LOOKUP_DATA1,LOOKUP_INVENTORY_NULL1,LOOKUP_INVENTORY_NULL2,GET_INVENTORY_LOOKUP_DATA2,\r\n         LOOKUP_NULL,\r\n        LOOKUP_NULL1,LOOKUP_NULL2,LOOKUP_NULL3,LOOKUP_NULL4,LOOKUP_NULL5,\r\n        LOOKUP_NULL6,LOOKUP_NULL7,LOOKUP_NULL8,LOOKUP_NULL9,LOOKUP_NULL10,\r\n        LOOKUP_NULL11,LOOKUP_NULL12,LOOKUP_NULL13,LOOKUP_NULL14,LOOKUP_NULL15,GET_INVENTORY_LOOKUP_DATA,LOOKUP_INVENTORY_NULL\r\n    } from \"../types\";\r\n\r\nexport const getLookupData = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_DATA,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getInventoryLookupData = (payload) => {\r\n    return {\r\n        type: GET_INVENTORY_LOOKUP_DATA,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getInventoryLookupData1 = (payload) => {\r\n    return {\r\n        type: GET_INVENTORY_LOOKUP_DATA1,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getInventoryLookupData2 = (payload) => {\r\n    return {\r\n        type: GET_INVENTORY_LOOKUP_DATA2,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getLookup2Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_2_DATA,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getLookup3Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_3_DATA,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getLookup4Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_4_DATA,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getLookup5Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_5_DATA,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getLookup6Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_6_DATA,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getLookup7Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_7_DATA,\r\n        payload\r\n    };\r\n}\r\nexport const getLookup8Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_8_DATA,\r\n        payload\r\n    };\r\n}\r\nexport const getLookup9Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_9_DATA,\r\n        payload\r\n    };\r\n}\r\nexport const getLookup10Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_10_DATA,\r\n        payload\r\n    };\r\n}\r\nexport const getLookup11Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_11_DATA,\r\n        payload\r\n    };\r\n}\r\nexport const getLookup12Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_12_DATA,\r\n        payload\r\n    };\r\n}\r\nexport const getLookup13Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_13_DATA,\r\n        payload\r\n    };\r\n}\r\nexport const getLookup14Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_14_DATA,\r\n        payload\r\n    };\r\n}\r\n\r\nexport const getLookup15Data = (payload) => {\r\n    return {\r\n        type: GET_LOOKUP_15_DATA,\r\n        payload\r\n    };\r\n}\r\n \r\nexport const nullLookup = () => {\r\n    return {\r\n        type: LOOKUP_NULL,\r\n    };\r\n}\r\nexport const nullLookup1 = () => {\r\n    return {\r\n        type: LOOKUP_NULL1,\r\n    };\r\n}\r\nexport const nullLookup2 = () => {\r\n    return {\r\n        type: LOOKUP_NULL2,\r\n    };\r\n}\r\nexport const nullLookup3 = () => {\r\n    return {\r\n        type: LOOKUP_NULL3,\r\n    };\r\n}\r\nexport const nullLookup4 = () => {\r\n    return {\r\n        type: LOOKUP_NULL4,\r\n    };\r\n}\r\nexport const nullLookup5 = () => {\r\n    return {\r\n        type: LOOKUP_NULL5,\r\n    };\r\n}\r\nexport const nullLookup6 = () => {\r\n    return {\r\n        type: LOOKUP_NULL6,\r\n    };\r\n}\r\nexport const nullLookup7 = () => {\r\n    return {\r\n        type: LOOKUP_NULL7,\r\n    };\r\n}\r\nexport const nullLookup8 = () => {\r\n    return {\r\n        type: LOOKUP_NULL8,\r\n    };\r\n}\r\nexport const nullLookup9 = () => {\r\n    return {\r\n        type: LOOKUP_NULL9,\r\n    };\r\n}\r\nexport const nullLookup10 = () => {\r\n    return {\r\n        type: LOOKUP_NULL10,\r\n    };\r\n}\r\nexport const nullLookup11 = () => {\r\n    return {\r\n        type: LOOKUP_NULL11,\r\n    };\r\n}\r\nexport const nullLookup12 = () => {\r\n    return {\r\n        type: LOOKUP_NULL12,\r\n    };\r\n}\r\nexport const nullLookup13 = () => {\r\n    return {\r\n        type: LOOKUP_NULL13,\r\n    };\r\n}\r\nexport const nullLookup14 = () => {\r\n    return {\r\n        type: LOOKUP_NULL14,\r\n    };\r\n}\r\nexport const nullLookup15 = () => {\r\n    return {\r\n        type: LOOKUP_NULL15,\r\n    };\r\n}\r\nexport const nullLookupInventory = () => {\r\n    return {\r\n        type: LOOKUP_INVENTORY_NULL,\r\n    };\r\n}\r\n\r\nexport const nullLookupInventory1 = () => {\r\n    return {\r\n        type: LOOKUP_INVENTORY_NULL1,\r\n    };\r\n}\r\n\r\nexport const nullLookupInventory2 = () => {\r\n    return {\r\n        type: LOOKUP_INVENTORY_NULL2,\r\n    };\r\n}\r\n\r\n// ","import React, { useState } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport { Growl } from '../globalcomponents';\r\nconst InputText = (props) => {\r\n\r\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const webRegex = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\r\n\r\n    const [property, setProperty] = useState({\r\n        error: '',\r\n        open: false,\r\n        severity: '',\r\n    })\r\n\r\n\r\n\r\n    const validateField = (prop, value) => {\r\n\r\n          }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setProperty({ ...property, open: false });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Growl\r\n                property={property}\r\n                close={handleClose}\r\n                onClick={handleClose}\r\n            />\r\n                <TextField\r\n                    fullWidth\r\n                    error={props.iserror}\r\n                    id={props.id}\r\n                    label={props.label}\r\n                    helperText={(props.iserror) ? props.helperText : ''}\r\n                    value={props.value}\r\n                    onChange={props.Change}\r\n                    onFocus={props.Focus}\r\n                    onBlur={props.Blur}\r\n                    disabled={props.disabled}\r\n                    placeholder={props.placeholder}\r\n                    onInput={(e) => {\r\n                        props.maxLength ? e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, props.maxLength)\r\n                            : e.target.value = e.target.value\r\n                    }}\r\n                InputProps={{\r\n                    autoComplete: 'new-password',\r\n                    form: {\r\n                        autoComplete: 'off',\r\n                    },\r\n                    min: 0, style: { textAlign: props.textAlign ? props.textAlign : 'left' },\r\n                    readOnly: props.readOnly,\r\n                    shrink: true,\r\n                    startAdornment: props.symbol ? <InputAdornment position=\"start\">{props.symbolIcon}</InputAdornment> : null,\r\n                    endAdornment: props.lookup ? <InputAdornment position=\"end\">\r\n                        <div className=\"lookup-btn\">\r\n                            <Button\r\n                                disabled={props.disabled}\r\n                                onClick={() => props.onClick()}\r\n                            >\r\n                                <MoreHorizIcon disabled={true} fontSize=\"large\" />\r\n                            </Button>\r\n                        </div>\r\n                    </InputAdornment>\r\n                        : null\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\nimport { Snackbar } from '@mui/material';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nexport default function Growl(props) {\r\n    \r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            style={{ marginTop: 50 }}\r\n            open={props.property.open}\r\n            autoHideDuration={2000}\r\n            onClose={props.close}\r\n        >\r\n            <MuiAlert onClose={props.close} elevation={6} variant=\"filled\" severity={props.property.severity}>\r\n                {props.property.msg ?props.property.msg :\"Server Error\"}\r\n            </MuiAlert >\r\n        </Snackbar>\r\n    )\r\n}","import React from 'react';\r\nimport { TextField, MenuItem } from '@mui/material';\r\nimport InputLabel from 'ui-component/extended/Form/InputLabel';\r\nimport { makeStyles } from '@mui/material/styles';\r\n// import './styles/style.css';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         margin: theme.spacing(1),\r\n//         maxHeight: 400\r\n//     }\r\n// }));\r\n\r\nconst DropDown = (props) => {\r\n    // const classes = useStyles();\r\n    const { list, label, disabled, id } = props;\r\n\r\n    return (\r\n        <div style={{marginTop:'5px'}}>\r\n            {/* <InputLabel>{label}</InputLabel> */}\r\n            <TextField\r\n                fullWidth\r\n                label={label}\r\n                variant=\"outlined\"\r\n                disabled={disabled}\r\n                id={id}\r\n                select\r\n                value={props.value}\r\n                onChange={props.Change}\r\n                helperText={props.text}\r\n            >\r\n                {list?.length ? (\r\n                    list.map((item, index) =>\r\n                        item.code ? (\r\n                            <MenuItem\r\n                                key={index}\r\n                                value={item.code}\r\n                                // className={classes.root}\r\n                            >\r\n                                {item.value}\r\n                            </MenuItem>\r\n                        ) : (\r\n                            <MenuItem\r\n                                key={index}\r\n                                value={item}\r\n                                // className={classes.root}\r\n                            >\r\n                                {item}\r\n                            </MenuItem>\r\n                        )\r\n                    )\r\n                ) : (\r\n                    <MenuItem\r\n                    // className={classes.root}\r\n                    >\r\n                        No Options\r\n                    </MenuItem>\r\n                )}\r\n            </TextField>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DropDown;\r\n","import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport TextField from '@mui/material/TextField';\r\nimport './styles/style.css';\r\nimport InputLabel from 'ui-component/extended/Form/InputLabel';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport {NumberAlignment} from 'ui-component/globalcomponents'\r\n\r\n\r\n\r\nconst InputNumber = (props) => {\r\n    return (\r\n        <div className={props.numField ? '' : 'NumberFormat'}>\r\n            {/* <InputLabel>{props.label}</InputLabel> */}\r\n            <NumberFormat\r\n                // displayType=\"text\"\r\n                InputProps={{ shrink: true }}\r\n                style={{ width: '100%', height: '.85cm', border: props.border ? '0px solid' : null }}\r\n                customInput={NumberAlignment}\r\n                thousandSeparator={props.thousandSeparator}\r\n                prefix={props.symbol === false ? ' ' : props.symbolIcon + ' '}\r\n                isNumericString={true}\r\n                decimalScale={2}\r\n                fixedDecimalScale={2}\r\n                format={props.format}\r\n                label={props.label}\r\n                value={props.value}\r\n                onChange={props.Change}\r\n                onBlur={props.Blur}\r\n                onValueChange={props.valueChange}\r\n                disabled={props.disabled}\r\n                placeholder={props.placeholder}\r\n                fullWidth\r\n                style={{ display: 'block', border: '0px solid' }}\r\n                mask={props.mask}\r\n                variant=\"outlined\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputNumber;\r\n","import \"date-fns\";\r\nimport React from \"react\";\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\n\r\nexport default function InputDate(props) {\r\n  return (\r\n    // <div style={{marginTop:'5px'}}>\r\n    <div>\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        // color=\"primary\"\r\n        label={props.label}\r\n        style={{ width: '100%', color:'primary' }}\r\n        inputFormat=\"dd-MMM-yyyy\"\r\n        value={props.value}\r\n        disabled={props.disabled}\r\n        onChange={props.Change}\r\n        renderInput={(params) => <TextField {...params} fullWidth />}\r\n      />\r\n    </LocalizationProvider>\r\n    </div>\r\n  );\r\n}","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n// generate random\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\n// modal position\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst Body = React.forwardRef(({ modalStyle, handleClose, handleDelete, handlePost, isPost,message }, ref) => (\r\n    <div ref={ref} tabIndex={-1}>\r\n        <MainCard\r\n            // style={modalStyle}\r\n            sx={{\r\n                position: 'absolute',\r\n                width: { xs: 280, lg: 450 },\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}\r\n            title={isPost ? \"Post Confirmation!\" : \"Delete Confirmation!\"}\r\n            content={false}\r\n            secondary={\r\n                <IconButton onClick={handleClose} size=\"large\">\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            }\r\n        >\r\n            <CardContent >\r\n                <Grid container justifyContent=\"center\">\r\n                    <Typography variant=\"h3\" sx={{ alignItem: 'center' }}>{message}</Typography>\r\n                </Grid>\r\n                <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                    {/* Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute est in\r\n                    mollit irure enim tempor in. */}\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions>\r\n                <Grid container justifyContent=\"flex-end\">\r\n                    <Button variant=\"outlined\" type=\"button\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"contained\" color={!isPost? \"error\" : \"primary\"} type=\"button\" onClick={isPost ? handlePost : handleDelete} sx={{ marginLeft: 1 }}>\r\n                       {isPost ? \"Post\" : \"Delete\"}\r\n                    </Button>             \r\n                    {/* <SimpleModal /> */}\r\n                </Grid>\r\n            </CardActions>\r\n        </MainCard>\r\n    </div>\r\n));\r\n\r\nBody.propTypes = {\r\n    modalStyle: PropTypes.object,\r\n    handleClose: PropTypes.func\r\n};\r\n\r\n// ==============================|| SIMPLE MODAL ||============================== //\r\n\r\nexport default function SimpleModal({ open, onClose, onDelete, isPost, onPost, message }) { \r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    // const [open, setOpen] = React.useState(false);\r\n    // const handleOpen = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    // const handleClose = () => {\r\n    //     onClose()\r\n    // };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"flex-end\">\r\n            <Button variant=\"contained\" type=\"button\" onClick={onClose}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"button\" onClick={onClose}>\r\n                Delete\r\n            </Button>\r\n            <Modal open={open} onClose={onClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n                <Body \r\n                modalStyle={modalStyle} \r\n                handleClose={onClose} \r\n                handleDelete={onDelete}\r\n                handlePost={onPost} \r\n                message={message}\r\n                isPost={isPost} />\r\n            </Modal>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst ModalWrapper = styled('div')({\r\n    marginBottom: 16,\r\n    height: 500,\r\n    flexGrow: 1,\r\n    minWidth: 300,\r\n    zIndex: -1,\r\n    transform: 'translateZ(0)',\r\n    '@media all and (-ms-high-contrast: none)': {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n// ==============================|| SERVER MODAL ||============================== //\r\n\r\nexport default function ServerModal() {\r\n    const rootRef = React.useRef(null);\r\n\r\n    return (\r\n        <ModalWrapper ref={rootRef}>\r\n            <Modal\r\n                disablePortal\r\n                disableEnforceFocus\r\n                disableAutoFocus\r\n                open\r\n                aria-labelledby=\"server-modal-title\"\r\n                aria-describedby=\"server-modal-description\"\r\n                sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }}\r\n                container={() => rootRef.current}\r\n            >\r\n                <MainCard\r\n                    sx={{\r\n                        width: 450,\r\n                        zIndex: 1\r\n                    }}\r\n                    title=\"Server Side Modal\"\r\n                    content={false}\r\n                    secondary={\r\n                        <IconButton size=\"large\">\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    <CardContent>\r\n                        <Typography variant=\"body1\">\r\n                            Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                            Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute\r\n                            est in mollit irure enim tempor in.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <CardActions>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Button variant=\"contained\" type=\"button\">\r\n                                Open Modal\r\n                            </Button>\r\n                        </Grid>\r\n                    </CardActions>\r\n                </MainCard>\r\n            </Modal>\r\n        </ModalWrapper>\r\n    );\r\n}\r\n","// project imports\r\nimport SimpleModal from './SimpleModal';\r\nimport ServerModal from './ServerModal';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\n// ==============================|| MODAL PAGE ||============================== //\r\n\r\nconst Modal = ({onDelete, onClose, open, isPost, onPost, message}) => {\r\n    return (\r\n    <MainCard \r\n    title=\"Simple Modal\" \r\n    // secondary={<SecondaryAction link=\"https://next.material-ui.com/components/modal/\" />}\r\n    >\r\n        <ServerModal />\r\n        <SimpleModal \r\n        open={open} \r\n        onClose={onClose} \r\n        onDelete={onDelete} \r\n        onPost={onPost}\r\n        message={message}\r\n        isPost={isPost}/>\r\n    </MainCard>\r\n)};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport Icons from '../material-icons';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '../../views/forms/plugins/Modal'\r\nimport { Growl } from '../globalcomponents';\r\nimport { getAll, nullList, insertAll, updateAll, deleteAll, postList } from '../../store/actions/index';\r\nimport { Grid, Card, Switch, Tooltip, Fab, Menu, MenuItem, Typography, Skeleton } from '@mui/material';\r\nimport constants from '../../utilities/constants';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { openDrawer } from 'store/slices/menu';\r\n\r\nvar newList = false;\r\nvar editList = false;\r\nconst constant = constants.getConstant();\r\nconst Register = (props) => {\r\n    const theme = useTheme();\r\n    const [AddRights, setAddRights] = useState(false);\r\n    const [EditRights, setEditRights] = useState(true);\r\n    const [ViewRights, setViewRights] = useState(true);\r\n    const [DeleteRights, setDeleteRights] = useState(true);\r\n    const [PostRights, setPostRights] = useState(true);\r\n    // const [ApprovalRights, setApprovalRights] = useState(true);\r\n    const [deleteBox, setDeleteBox] = useState(false);\r\n    const [loadingDelete, setloadingDelete] = useState(false);\r\n    const [msgString, setMsgString] = useState('');\r\n    const [selectedList, setSelectedList] = useState(null);\r\n    const [List, setList] = useState({ columns: [], rows: [] });\r\n    const [loading, setLoading] = useState(false);\r\n    const [Post, setPost] = useState(false);\r\n    const [RegHeading, setRegHeading] = useState('');\r\n    const [menuAnchor, setMenuAnchor] = useState('');\r\n    const [menuOpen, setMenuOpen] = useState('');\r\n    const [getRow, setRow] = useState({});\r\n    const [isPost, setisPost] = useState(false);\r\n    const [property, setProperty] = useState({\r\n        error: '',\r\n        open: false,\r\n        severity: ''\r\n    });\r\n    const dispatch = useDispatch();\r\n    const [pageSize, setPageSize] = useState(30);\r\n\r\n    const onClickDelete = (rowData) => {\r\n        setisPost(false)\r\n        if (rowData.UseCount > 0) {\r\n            setProperty((property) => ({\r\n                ...property,\r\n                msg: 'Record is in use',\r\n                severity: 'error',\r\n                open: true\r\n            }));\r\n        } else if (rowData.SubmitStatus === 1) {\r\n            setProperty((property) => ({\r\n                ...property,\r\n                msg: 'Posted transactions can not be deleted',\r\n                severity: 'error',\r\n                open: true\r\n            }));\r\n        } else {\r\n            setPost(false);\r\n            props.SetRowDataID(rowData, 'Delete');\r\n            OpenDeleteModal()\r\n            setDeleteBox(true);\r\n            setSelectedList(rowData);\r\n            setMsgString('Are you sure you want to delete this Record?');\r\n            setloadingDelete(false);\r\n        }\r\n    };\r\n\r\n    const OpenDeleteModal = () => {\r\n        setDeleteBox(true)\r\n        setMenuOpen(false);\r\n    }\r\n    const CLoseDeleteModal = () => {\r\n        setDeleteBox(false)\r\n    }\r\n\r\n    const onClickPost = (rowData) => {\r\n        setisPost(true)\r\n        if (rowData.SubmitStatus === 1 || rowData.Status === 1 || rowData.Posted === 1) {\r\n            setProperty((property) => ({\r\n                ...property,\r\n                msg: 'Transactions already  Posted',\r\n                severity: 'error',\r\n                open: true\r\n            }));\r\n        } else {\r\n            setPost(true);\r\n            props.SetRowDataID(rowData, 'Post');\r\n            setMenuOpen(false)\r\n            setDeleteBox(true);\r\n            // if (props.FormName === 'SalesDispatch') {\r\n            //     const row = { ...rowData, TransNo: rowData.DispatchNo };\r\n            //     setSelectedList(row);\r\n            // } else if (props.FormName === 'SalesInvoice') {\r\n            //     const row = { ...rowData, TransNo: rowData.InvoiceNo };\r\n            //     setSelectedList(row);\r\n            // } else {\r\n            //     setSelectedList(rowData);\r\n            // }\r\n            setMsgString('Are you sure want to Post?');\r\n            setloadingDelete(false);\r\n        }\r\n    };\r\n\r\n    const PostFunc = (rowData) => {\r\n        setLoading(true);\r\n        setloadingDelete(true);\r\n\r\n        let payload = {\r\n            FormName: props.FormName,\r\n            ID: selectedList.TransNo,\r\n            LocationCode: selectedList.LocationCode,\r\n            list: selectedList\r\n        };\r\n        dispatch(postList(payload));\r\n    };\r\n\r\n    const Delete = () => {\r\n        setloadingDelete(true);\r\n        const ID = props.ID;\r\n        let payload = {};\r\n        if (\r\n            props.FormID === constant.FinancialBatchFormID ||\r\n            props.FormID === constant.InventoryBatchFormID ||\r\n            props.FormID === constant.PurchaseBatchFormID ||\r\n            props.FormID === constant.SalesBatchFormID\r\n        ) {\r\n            payload = {\r\n                FormName: props.Module + props.FormName,\r\n                ID: ID\r\n            };\r\n        } else {\r\n            payload = {\r\n                FormName: props.FormName,\r\n                FormCode: props.FormCode,\r\n                FormNameIDValue: ID\r\n            };\r\n        }\r\n        dispatch(deleteAll(payload));\r\n    };\r\n\r\n    const hide = () => {\r\n        setSelectedList(null);\r\n        setDeleteBox(false);\r\n        setloadingDelete(false);\r\n    };\r\n\r\n    const onPrint = (rowData) => {\r\n        let FormName = '';\r\n        let JrnlNo = '';\r\n        let JrnlDate = '';\r\n        let JrnlID = '';\r\n        let url = '';\r\n        console.log('rowData', rowData);\r\n        if (props.FormID === '107') {\r\n            FormName = 'VoucherPrinting_BPV';\r\n            JrnlNo = rowData.Src_JrnlID;\r\n            url = `${constant.reportUrl}/${FormName}&CmpName=${JSON.parse(sessionStorage.getItem('CmpName'))}&PrintUserName=${JSON.parse(\r\n                sessionStorage.getItem('UserName')\r\n            )}&JournalID=${JrnlNo}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        } else if (props.FormID === '94') {\r\n            FormName = 'VoucherPrinting_JV';\r\n            JrnlNo = rowData.JrnlID;\r\n            url = `${constant.reportUrl}/${FormName}&CmpName=${JSON.parse(sessionStorage.getItem('CmpName'))}&PrintUserName=${JSON.parse(\r\n                sessionStorage.getItem('UserName')\r\n            )}&JournalID=${JrnlNo}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        } else if (props.FormID === '96' || props.FormID === '100') {\r\n            FormName = 'VoucherPrinting_RV';\r\n            JrnlNo = rowData.JrnlID;\r\n            url = `${constant.reportUrl}/${FormName}&CmpName=${JSON.parse(sessionStorage.getItem('CmpName'))}&PrintUserName=${JSON.parse(\r\n                sessionStorage.getItem('UserName')\r\n            )}&JournalID=${JrnlNo}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        } else if (props.FormID === '95' || props.FormID === '98') {\r\n            FormName = 'VoucherPrinting_PV';\r\n            JrnlNo = rowData.JrnlID;\r\n            url = `${constant.reportUrl}/${FormName}&CmpName=${JSON.parse(sessionStorage.getItem('CmpName'))}&PrintUserName=${JSON.parse(\r\n                sessionStorage.getItem('UserName')\r\n            )}&JournalID=${JrnlNo}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        } else if (props.FormID === '104') {\r\n            FormName = 'DonorReceipt';\r\n            url = `${constant.reportUrl}/${FormName}&DonorIDFrom=${rowData.donor_ID}&DonorIDTo=${rowData.donor_ID}&DateFrom=${rowData.receipt_date}&DateTo=${rowData.receipt_date}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        } else if (props.FormID === '76') {\r\n            FormName = 'PurchaseInvoice';\r\n            url = `${constant.reportUrl}/${FormName}&CmpName=${JSON.parse(sessionStorage.getItem('CmpName'))}&PrintUserName=${JSON.parse(\r\n                sessionStorage.getItem('UserName')\r\n            )}&InvoiceNo=${rowData.TransNo}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        } else if (props.FormID === '80') {\r\n            FormName = 'SalesInvoice';\r\n            url = `${constant.reportUrl}/${FormName}&CmpName=${JSON.parse(sessionStorage.getItem('CmpName'))}&PrintUserName=${JSON.parse(\r\n                sessionStorage.getItem('UserName')\r\n            )}&InvoiceNo=${rowData.InvoiceNo}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        } else if (props.FormID === '79') {\r\n            FormName = 'DeliveryOrder';\r\n            url = `${constant.reportUrl}/${FormName}&CmpName=${JSON.parse(sessionStorage.getItem('CmpName'))}&PrintUserName=${JSON.parse(\r\n                sessionStorage.getItem('UserName')\r\n            )}&DispatchNo=${rowData.DispatchNo}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        } else if (props.FormID === '82' || props.FormID === '83') {\r\n            FormName = 'StockTransfer';\r\n            url = `${constant.reportUrl}/${FormName}&CmpName=${JSON.parse(sessionStorage.getItem('CmpName'))}&PrintUserName=${JSON.parse(\r\n                sessionStorage.getItem('UserName')\r\n            )}&TransNo=${rowData.TransNo}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        } else if (props.FormID === '84') {\r\n            FormName = 'StockAdjustment';\r\n            url = `${constant.reportUrl}/${FormName}&CmpName=${JSON.parse(sessionStorage.getItem('CmpName'))}&PrintUserName=${JSON.parse(\r\n                sessionStorage.getItem('UserName')\r\n            )}&TransNo=${rowData.TransNo}&j_username=${constant.j_username}&j_password=${constant.j_password}&output=pdf`;\r\n        }\r\n\r\n        window.open(url, '_blank', 'toolbar=1, scrollbars=1, resizable=1, width=' + 1080 + ', height=' + 768);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setList({ columns: [], rows: [] });\r\n        // const userRoles = JSON.parse(sessionStorage.getItem('userRoles'));\r\n        // let formRights = userRoles.filter((val, i) => val.FormID === props.FormID);\r\n        // // console.log(userRoles,'userRoles');\r\n        // if (false) {\r\n        //     // formRights.length === 0\r\n        //     window.location = \"#/access\";\r\n        // }\r\n        // else {\r\n        // regName();\r\n\r\n        // let addRights = formRights.filter((val, i) => val.Create === \"1\");\r\n        // if (addRights.length > 0) {\r\n        //     setAddRights(false);\r\n        // }\r\n\r\n        // let ViewRights = formRights.filter((val, i) => val.View === \"1\");\r\n        // if (ViewRights.length > 0) {\r\n        //     setViewRights(false);\r\n        // }\r\n\r\n        // let EditRights = formRights.filter((val, i) => val.Edit === \"1\");\r\n        // if (EditRights.length > 0) {\r\n        //     setEditRights(false);\r\n        // }\r\n        // let DeleteRights = formRights.filter((val, i) => val.Delete === \"1\");\r\n        // if (DeleteRights.length > 0) {\r\n        //     setDeleteRights(false);\r\n        // }\r\n\r\n        // let PostRights = formRights.filter((val, i) => val.Post === \"1\");\r\n        // if (PostRights.length > 0) {\r\n        //     setPostRights(false);\r\n        // }\r\n        // if (props.FormID === constant.FinancialBatchFormID || props.FormID === constant.InventoryBatchFormID || props.FormID === constant.PurchaseBatchFormID || props.FormID === constant.SalesBatchFormID) {\r\n        //     dispatch(getAll({ FormName: props.FormName, Type: props.type, Module: props.Module }));\r\n        // }\r\n        // else {\r\n        // dispatch(getAll({ FormName: props.FormName, Type: props.type }));\r\n        dispatch(getAll(props.FormName));\r\n        dispatch(openDrawer(false));\r\n        // }\r\n\r\n        setLoading(true);\r\n\r\n        // }\r\n    }, []);\r\n\r\n    // const regName = () => {      // Not In use \r\n    //     const menu = JSON.parse(sessionStorage.getItem('Menu'));\r\n    //     let arr = menu.filter((eachItem) => {\r\n    //         if (eachItem.items) {\r\n    //             eachItem.items.filter((items) => {\r\n    //                 if (items.items) {\r\n    //                     items.items.filter((data) => {\r\n    //                         //return props.FormID === data.id\r\n    //                         if (props.FormID === data.id) {\r\n    //                             setRegHeading(data.label);\r\n    //                         }\r\n    //                     });\r\n    //                 } else {\r\n    //                     if (props.FormID === eachItem.id) {\r\n    //                         setRegHeading(eachItem.label);\r\n    //                     }\r\n    //                     //return props.FormID === eachItem.id\r\n    //                 }\r\n    //             });\r\n    //         } else {\r\n    //             if (props.FormID === eachItem.id) {\r\n    //                 setRegHeading(eachItem.label);\r\n    //             }\r\n    //             // return props.FormID === eachItem.id\r\n    //         }\r\n    //     });\r\n\r\n    //     if (arr.length > 0) {\r\n    //         setRegHeading(arr[0].label);\r\n    //     }\r\n    // };\r\n\r\n    const AllActionsRes = useSelector(({ AllActionsRes }) => AllActionsRes);\r\n\r\n    useEffect(() => {\r\n        if (AllActionsRes.error) {\r\n            setLoading(false);\r\n            setloadingDelete(false);\r\n            setDeleteBox(false);\r\n            // props?.setLoadingOnSave(false) \r\n            if (props.dosaveFunction) props.dosaveFunction(null);\r\n            setProperty({\r\n                ...property,\r\n                msg: AllActionsRes.error.message,\r\n                severity: 'error',\r\n                open: true\r\n            });\r\n\r\n            dispatch(nullList());\r\n        }\r\n        if (AllActionsRes.list) {\r\n            if (AllActionsRes.list.Success === true) {\r\n                setLoading(false);\r\n                setList({ columns: AllActionsRes.list.Message.columns, rows: AllActionsRes.list.Message.rows });\r\n                dispatch(nullList());\r\n            } else {\r\n                setLoading(false);\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: AllActionsRes.list.Message,\r\n                    dialogOpen: false,\r\n                    loadingOnSave: false\r\n                });\r\n            }\r\n        }\r\n\r\n        if (AllActionsRes.insertData) {\r\n            if (AllActionsRes.insertData.Success === true) {\r\n                props.hideDialog();\r\n                setLoading(true);\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'success',\r\n                    msg: AllActionsRes.insertData.Message,\r\n                    dialogOpen: false,\r\n                    loadingOnSave: false\r\n                });\r\n                if (\r\n                    props.FormID === constant.FinancialBatchFormID ||\r\n                    props.FormID === constant.InventoryBatchFormID ||\r\n                    props.FormID === constant.PurchaseBatchFormID ||\r\n                    props.FormID === constant.SalesBatchFormID\r\n                ) {\r\n                    dispatch(getAll({ FormName: props.FormName, Type: props.type, Module: props.Module }));\r\n                } else {\r\n                    dispatch(getAll({ FormName: props.FormName, Type: props.type }));\r\n                }\r\n            } else {\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: AllActionsRes.insertData.Message,\r\n                    // dialogOpen: false,\r\n                    loadingOnSave: false\r\n                });\r\n                props.setLoadingOnSave(false);\r\n                props.dosaveFunction(null);\r\n                setLoading(false);\r\n            }\r\n            dispatch(nullList());\r\n        }\r\n\r\n        if (AllActionsRes.updateData) {\r\n            if (AllActionsRes.updateData.Success === true) {\r\n                props.hideDialog() === undefined ? null : props.hideDialog();\r\n                setLoading(true);\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'success',\r\n                    msg: AllActionsRes.updateData.Message,\r\n                    dialogOpen: false,\r\n                    loadingOnSave: false\r\n                });\r\n                if (\r\n                    props.FormID === constant.FinancialBatchFormID ||\r\n                    props.FormID === constant.InventoryBatchFormID ||\r\n                    props.FormID === constant.PurchaseBatchFormID ||\r\n                    props.FormID === constant.SalesBatchFormID\r\n                ) {\r\n                    dispatch(getAll({ FormName: props.FormName, Type: props.type, Module: props.Module }));\r\n                } else {\r\n                    dispatch(getAll({ FormName: props.FormName, Type: props.type }));\r\n                }\r\n            } else {\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: AllActionsRes.updateData.Message,\r\n                    // dialogOpen: false,\r\n                    loadingOnSave: false\r\n                });\r\n                props.dosaveFunction(null);\r\n            }\r\n\r\n            dispatch(nullList());\r\n        }\r\n\r\n        if (AllActionsRes.createOrUpdateData) {\r\n            if (AllActionsRes.createOrUpdateData.Success === true) {\r\n                // props.hideDialog()\r\n                setLoading(true);\r\n\r\n                props.DialogClose() === undefined ? null : props.DialogClose()\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'success',\r\n                    msg: AllActionsRes.createOrUpdateData.Message,\r\n                    dialogOpen: false,\r\n                    loadingOnSave: false\r\n                });\r\n\r\n                dispatch(getAll(props.FormName));\r\n\r\n            } else {\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: AllActionsRes?.updateData?.Message,\r\n                    // dialogOpen: false,\r\n                    loadingOnSave: false\r\n                });\r\n                props.dosaveFunction(null);\r\n            }\r\n\r\n            dispatch(nullList());\r\n        }\r\n        if (AllActionsRes.postList) {\r\n            setLoading(false);\r\n            if (AllActionsRes.postList.Success === true) {\r\n                hide();\r\n                setProperty((property) => ({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'success',\r\n                    msg: AllActionsRes.postList.Message,\r\n                    dialogOpen: false\r\n                }));\r\n                if (\r\n                    props.FormID === constant.FinancialBatchFormID ||\r\n                    props.FormID === constant.InventoryBatchFormID ||\r\n                    props.FormID === constant.PurchaseBatchFormID ||\r\n                    props.FormID === constant.SalesBatchFormID\r\n                ) {\r\n                    dispatch(getAll({ FormName: props.FormName, Type: props.type, Module: props.Module }));\r\n                } else {\r\n                    dispatch(getAll({ FormName: props.FormName, Type: props.type }));\r\n                }\r\n                save(AllActionsRes.saveProps);\r\n            } else {\r\n                hide();\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: AllActionsRes.postList.Message,\r\n                    // dialogOpen: false,\r\n                    loadingOnSave: false\r\n                });\r\n            }\r\n            dispatch(nullList());\r\n        }\r\n        if (AllActionsRes.deleteData) {\r\n            hide();\r\n            if (AllActionsRes.deleteData.Success === true) {\r\n                setLoading(true);\r\n\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'success',\r\n                    msg: AllActionsRes.deleteData.Message,\r\n                    dialogOpen: false\r\n                });\r\n                // if (props.FormID === constant.FinancialBatchFormID || props.FormID === constant.InventoryBatchFormID || props.FormID === constant.PurchaseBatchFormID || props.FormID === constant.SalesBatchFormID) {\r\n                //     dispatch(getAll({ FormName: props.FormName, Type: props.type, Module: props.Module }));\r\n                // }\r\n                // else {\r\n                dispatch(getAll(props.FormName));\r\n                // dispatch(getAll({ FormName: props.FormName, Type: props.type }));\r\n                // }\r\n            } else {\r\n                setProperty({\r\n                    ...property,\r\n                    open: true,\r\n                    severity: 'error',\r\n                    msg: AllActionsRes.deleteData.Message,\r\n                    dialogOpen: false\r\n                });\r\n            }\r\n\r\n            dispatch(nullList());\r\n        }\r\n    }, [AllActionsRes]);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setProperty({ ...property, open: false });\r\n    };\r\n    const addNew = () => {\r\n        props.AddData(List);\r\n        newList = true;\r\n        editList = false;\r\n    };\r\n\r\n    const onEdit = (rowData) => {\r\n        setMenuOpen(false);\r\n        if (rowData.SubmitStatus === 1) {\r\n            setProperty((property) => ({\r\n                ...property,\r\n                msg: 'Posted transactions can not be edited',\r\n                severity: 'error',\r\n                open: true\r\n            }));\r\n        } else {\r\n            newList = false;\r\n            editList = true;\r\n            props.EditData(rowData, List);\r\n        }\r\n    };\r\n\r\n    const addView = (rowData) => {\r\n        setMenuOpen(false);\r\n        newList = false;\r\n        props.ViewData(rowData);\r\n    };\r\n\r\n    const save = (payload) => {\r\n        if (payload) {\r\n            if (newList) {\r\n                dispatch(insertAll(payload));\r\n            } else if (editList) {\r\n                dispatch(updateAll(payload));\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log({ saveFunction: props.saveFunction })\r\n        if (props.saveFunction) {\r\n            save(props.payload);\r\n        }\r\n    }, [props.saveFunction]);\r\n\r\n    const pageChange = (e) => {\r\n        setPageSize(e);\r\n    };\r\n\r\n    const openMenu = (event, row) => {\r\n        setRow(row);\r\n        let anchorElement = event.currentTarget;\r\n        setMenuAnchor(anchorElement);\r\n        setMenuOpen(true);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setMenuOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Growl property={property} close={handleClose} onClick={handleClose} />\r\n\r\n                <Grid item xs={12}>\r\n                    <div className=\"material-table-box\">\r\n                        <Typography>\r\n                            {loading ? (\r\n                                <>\r\n                                    <Skeleton variant=\"rectangular\" height={1600} />\r\n                                </>\r\n                            ) : (\r\n                                <MaterialTable\r\n                                    style={{\r\n                                        padding: '10px'\r\n                                    }}\r\n                                    // isLoading={loading}\r\n                                    columns={List.columns}\r\n                                    data={List.rows}\r\n                                    onChangeRowsPerPage={(e) => pageChange(e)}\r\n                                    localization={{\r\n                                        body: {\r\n                                            emptyDataSourceMessage: 'No records to display.',\r\n                                            filterRow: {\r\n                                                filterTooltip: 'Filter'\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    icons={Icons}\r\n                                    options={{\r\n                                        showTitle: false,\r\n                                        toolbar: false,\r\n                                        actionsColumnIndex: -1,\r\n                                        pageSize: pageSize,\r\n                                        pageSizeOptions: [5, 10, 20, 30, 50, 70, 100],\r\n                                        search: false,\r\n                                        // filtering: true,\r\n                                        // filterCellStyle: {\r\n                                        //     paddingTop: '3px',\r\n                                        //     paddingBottom: '3px'\r\n                                        // },\r\n                                        // rowStyle: (x) => {\r\n                                        //     if (x.tableData.id % 2) {\r\n                                        //         return { backgroundColor: '#f2f2f2' };\r\n                                        //     }\r\n                                        // },\r\n                                        headerStyle: {\r\n                                            fontWeight: 'bold',\r\n                                            paddingRight: '0px',\r\n                                            paddingTop: '5px',\r\n                                            paddingBottom: '5px',\r\n                                            textAlign: 'left'\r\n                                        }\r\n                                    }}\r\n                                    actions={[\r\n                                        (rowData) => ({\r\n                                            icon: () => <MoreVertIcon style={{ height: '1em', width: '1em' }} />,\r\n                                            tooltip: 'More',\r\n                                            onClick: (event) => {\r\n                                                openMenu(event, rowData);\r\n                                            }\r\n                                        })\r\n                                    ]}\r\n                                />\r\n                            )}\r\n                        </Typography>\r\n                    </div>\r\n                    <Tooltip title=\"Add New\">\r\n                        <Fab\r\n                            component=\"div\"\r\n                            size=\"large\"\r\n                            variant=\"circular\"\r\n                            color=\"secondary\"\r\n                            onClick={addNew}\r\n                            sx={{\r\n                                borderRadius: 0,\r\n                                borderTopLeftRadius: '50%',\r\n                                borderBottomLeftRadius: '50%',\r\n                                borderTopRightRadius: '50%',\r\n                                borderBottomRightRadius: '27px',\r\n                                bottom: '10%',\r\n                                right: '8%',\r\n                                position: 'fixed',\r\n                                zIndex: theme.zIndex.speedDial\r\n                            }}\r\n                        >\r\n                            <AddIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        keepMounted\r\n                        anchorEl={menuAnchor}\r\n                        open={menuOpen}\r\n                        onClose={handleMenuClose}\r\n                    >\r\n                        <MenuItem onClick={() => addView(getRow)}>View</MenuItem>\r\n                        {props.isEditButton && (\r\n                            <MenuItem onClick={() => onEdit(getRow)}>Edit</MenuItem>\r\n                        )}\r\n                        <MenuItem\r\n                            onClick={() => onClickDelete(getRow)}\r\n                        >Delete</MenuItem>\r\n                        {props.isPostButton && (\r\n                            <MenuItem\r\n                                onClick={() => onClickPost(getRow)}\r\n                            >Post</MenuItem>\r\n                        )}\r\n                    </Menu>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {deleteBox && (\r\n                <Modal\r\n                    open={deleteBox}\r\n                    onClose={CLoseDeleteModal}\r\n                    onDelete={Delete}\r\n                    onPost={PostFunc}\r\n                    message={msgString}\r\n                    isPost={isPost} />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useRef } from 'react';\r\nimport { TextField, Tooltip } from '@mui/material';\r\nimport MaterialTable from 'material-table';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ScrollPanel from '@mui/material/List';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport icons from 'ui-component/material-icons'\r\n\r\nconst DropDownLookup = (props) => {\r\n    let { reference } = props;\r\n    let readOnly = props.readOnly === true ? true : false;\r\n    reference = useRef();\r\n\r\n    const focusDiv = () => {\r\n        reference.current.focus();\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        props.setLookupEnable();\r\n        props.changeLookupVal(props.propertyName, e.target.value);\r\n        searchValue(e.target.value);\r\n    };\r\n\r\n    const searchValue = (value) => {\r\n        console.log({ value, lookupValuesList: props.lookupValuesList, listForSearch: props.listForSearch });\r\n        value = value.toString().toUpperCase();\r\n        let searchResult = props.listForSearch.filter((val) => {\r\n            return (\r\n                val[`${props.lookupValuesList[0]}`].toString().toUpperCase().includes(value.toString().toUpperCase()) ||\r\n                val[`${props.lookupValuesList[1]}`].toString().toUpperCase().includes(value.toString().toUpperCase())\r\n            );\r\n        });\r\n        props.setSearchRowProp(searchResult);\r\n        props.setFilterProp(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                style={props.style ? props.style : { display: 'block' }}\r\n                label={props.label}\r\n                value={props.value}\r\n                disabled={props.disabled}\r\n                onChange={readOnly === false && onChange}\r\n                onFocus={props.onFocus}\r\n                onBlur={props.onBlur}\r\n                variant=\"outlined\"\r\n                autoComplete=\"off\"\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            <div className=\"Lookup\" style={{ marginRight: -12 }}>\r\n                                <Tooltip title=\"Search Lookup\">\r\n                                    <IconButton\r\n                                        style={{ padding: 8 }}\r\n                                        disabled={props.disabled}\r\n                                        aria-label=\"Search\"\r\n                                        onClick={() => {\r\n                                            props.onClick();\r\n                                            focusDiv(reference);\r\n                                        }}\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <div\r\n                ref={reference}\r\n                onBlur={() => {\r\n                    readOnly === false && props.onBlurDiv();\r\n                }}\r\n                style={{ height: 'auto' }}\r\n            >\r\n                {props.lookupOpen && (\r\n                    <div\r\n                        style={{\r\n                            position: 'fixed',\r\n                            zIndex: 1000,\r\n                            marginTop: props.jv === true ? '28px' : 0,\r\n                            left: props.jv === true ? '-10px' : 'inherit'\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            {props.lookupOpen && (\r\n                                <ScrollPanel\r\n                                    sx={{\r\n                                        width: 250\r\n                                    }}\r\n                                >\r\n                                    <MaterialTable\r\n                                        onRowClick={(e, rowData) => {\r\n                                            props.setLookUpData(e, rowData);\r\n                                        }}\r\n                                        columns={props.columns}\r\n                                        data={props.rows}\r\n                                        icons={icons}\r\n                                        options={{\r\n                                            search: false,\r\n                                            showTitle: false,\r\n                                            toolbar: false,\r\n                                            paging: false,\r\n                                            sorting: false,\r\n                                            searchFieldStyle: {\r\n                                                border: '0px solid'\r\n                                            }\r\n                                        }}\r\n                                        localization={{\r\n                                            body: {\r\n                                                emptyDataSourceMessage: 'No records to display.',\r\n                                                filterRow: {\r\n                                                    filterTooltip: 'Filter'\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </ScrollPanel>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DropDownLookup;\r\n","import React, { useState, useEffect } from 'react';\r\n// import { Dialog } from 'primereact/dialog';\r\nimport { Dialog, DialogContent, IconButton, Typography } from '@mui/material'\r\nimport PropTypes from 'prop-types';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport MuiDialogActions from '@mui/material/DialogActions';\r\nimport MuiDialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport MaterialTable from 'material-table'\r\nimport Icons from '../../material-icons';\r\n\r\nconst PopupLookup = (props) => {\r\n\r\n    const [property, setProperty] = useState({\r\n        lookUpFilter: null,\r\n        pageSize: 20\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!props.LookUpOpen && property.lookUpFilter) {\r\n            setProperty({ lookUpFilter: null, pageSize: 20 })\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const pageChange = (e) => {\r\n        setProperty({ ...property, pageSize: e })\r\n    }\r\n\r\n    var { LookUpClose, setLookUpData, LookUpOpen } = props;\r\n    return (\r\n\r\n        // <Dialog dismissable={true} style={props.large === true ? { width: \"80%\", marginLeft: '2cm' } : { width: \"50%\", marginLeft: '2cm' }} header={props.LookUpHeading} visible={LookUpOpen} modal={true} onHide={LookUpClose}  >\r\n        <Dialog\r\n            fullWidth={true}\r\n            maxWidth={props.large === true ? \"lg\" : \"md\"}\r\n            onClose={LookUpClose}\r\n            aria-labelledby=\"customized-dialog-title\" open={LookUpOpen}>\r\n            <MuiDialogTitle disableTypography style={{ paddingBottom: '0px !important' }}>\r\n                <Typography variant=\"h6\">{props.LookUpHeading}</Typography>\r\n                <IconButton style={{ position: 'absolute', right: '5px', top: '10px' }} aria-label=\"close\" onClick={LookUpClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </MuiDialogTitle>\r\n            <DialogContent style={{ paddingTop: '0px !important' }}>\r\n                {props.LookupList &&\r\n                    <MaterialTable\r\n                        style={{\r\n                            border: 'none',\r\n                            // backgroundColor: 'transparent',\r\n                            boxShadow: 'none',\r\n                            paddingTop: '0px !important'\r\n                        }}\r\n                        // isLoading={props.LookupList.columns.length > 0 ? false : true}\r\n                        icons={Icons}\r\n                        options={{\r\n                            pageSize: props.changeSize === true ? props.pageSize : 20,\r\n                            selection: props.selection,\r\n                            // pageSizeOptions: [15],\r\n                            rowStyle: x => {\r\n                                if (x.tableData.id % 2) {\r\n                                    return { backgroundColor: \"#f2f2f2\", padding: \"7px\" }\r\n                                }\r\n                                else {\r\n                                    return { padding: \"7px\" }\r\n                                }\r\n                            },\r\n                            showTitle: false,\r\n                            search: true,\r\n                            filtering: true,\r\n                            filterCellStyle: {\r\n                                paddingTop: 1,\r\n                                paddingBottom: 1,\r\n                            },\r\n                            headerStyle: {\r\n                                fontWeight: \"bolder\"\r\n                            },\r\n                            showTextRowsSelected: false,\r\n                        }}\r\n                        onRowClick={(e, x) => setLookUpData && setLookUpData(e, x)}\r\n                        onChangeRowsPerPage={(e) => { console.log(\"Page change\", e) }}\r\n                        columns={props.LookupList.columns}\r\n                        data={props.LookupList.rows}\r\n                        onSelectionChange={props.onSelectionChange}\r\n                    />\r\n                }\r\n            </DialogContent>\r\n\r\n            {props.DialogActions &&\r\n                <MuiDialogActions>\r\n                    <Button \r\n                    // autoFocus \r\n                    onClick={props.ok} variant=\"outlined\"  >Save</Button>\r\n                    {/* <Button autoFocus onClick={() => setBatchDetailsLookupOpen(false)} variant=\"outlined\">Close</Button> */}\r\n                </MuiDialogActions>}\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nPopupLookup.propTypes = {\r\n    LookUpClose: PropTypes.func,\r\n    setLookUpData: PropTypes.func,\r\n    onSelChangeLookUpData: PropTypes.func,\r\n    lookUpOpen: PropTypes.bool\r\n};\r\n\r\n\r\nexport default PopupLookup;","import React from 'react';\r\nimport { FormControlLabel, Checkbox } from '@mui/material';\r\nimport './styles/style.css';\r\n\r\nconst CheckboxButton = (props) => {\r\n    return (\r\n        <div style={{marginTop:'5px'}}>\r\n            <FormControlLabel\r\n                defaultChecked\r\n                label={props.label}\r\n                disabled={props.disabled}\r\n                control={<Checkbox checked={props.checked} onChange={props.Change} />}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckboxButton;\r\n","import \"date-fns\";\r\nimport React from \"react\";\r\nimport { makeStyles } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from 'ui-component/extended/Form/InputLabel';\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n\r\n//   textField: {\r\n//     width: 208,\r\n//   },\r\n// }));\r\n\r\nconst InputTime = (props) => {\r\n\r\n  // const classes = useStyles();\r\n\r\n  let d = new Date()\r\n  let Time = d.toLocaleTimeString().slice(0, 5)\r\n  return (\r\n    <div style={{marginTop:'5px'}}>\r\n    {/* <InputLabel>{props?.label ? props?.label : \"Time Picker\"}</InputLabel> */}\r\n      <TextField\r\n        fullWidth\r\n        disabled={props.disabled}\r\n        id=\"time\"\r\n        variant=\"outlined\"\r\n        label={props?.label}\r\n        type=\"time\"\r\n        value={props.value}\r\n        defaultValue={props?.defaultValue ? props?.defaultValue : Time}\r\n        onChange={props.Change}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputTime;","import { TextField } from '@mui/material';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nconst NumberAlignment = withStyles((theme) => ({\r\n    root: {\r\n        '& input': {\r\n            textAlign: 'right',\r\n        }\r\n    }\r\n}))(TextField);\r\n\r\nexport default NumberAlignment;","import React, { useState } from 'react'\r\nimport { Grid, Card } from '@mui/material';\r\nimport { Dialog, DialogContent, IconButton, Typography, Button, DialogActions, DialogContentText, DialogTitle } from '@mui/material'\r\nimport Slide from '@mui/material/Slide';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ReusableDialog = (props) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={props?.IsOpen}\r\n                fullWidth={true}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                maxWidth={props.widthAllow}\r\n                // onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{props.Title ? props.Title : \"\"}\r\n                    <IconButton style={{ position: 'absolute', right: '5px', top: '10px' }} aria-label=\"close\" onClick={props?.Close}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n\r\n                </DialogTitle>\r\n                <DialogContent style={{ paddingTop: 10 }}>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n\r\n                        {!props?.Title ? (<Grid item xs={10}>\r\n\r\n                        </Grid>) : null}\r\n                        {props?.Body ? props?.Body : \"No Data Found\"}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!props?.ShowSave && (\r\n                        <Button\r\n                            onClick={props?.Close}\r\n                            color=\"secondary\"\r\n                            variant=\"contained\">\r\n                            {props.ButtonTitle2}\r\n                        </Button>\r\n                    )}\r\n                    {!props.ShowSave && (\r\n                        <Button\r\n                            onClick={props?.Save}\r\n                            color=\"secondary\"\r\n                            variant=\"contained\">\r\n                            {props.ButtonTitle1}\r\n                        </Button>\r\n                    )}\r\n\r\n                    {props?.ShowSave && (\r\n                        <Button\r\n                            onClick={props?.Close}\r\n                            color=\"secondary\"\r\n                            variant=\"contained\">\r\n                            {/* style={{ backgroundColor: theme.zIndex.speedDial, color: 'white', width: '12%' }}> */}\r\n                            {props.ButtonTitle3}\r\n                        </Button>\r\n                    )}\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReusableDialog;","import { forwardRef } from 'react';\r\n\r\nimport AddBox from '@mui/icons-material/Add';\r\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\r\nimport Check from '@mui/icons-material/Check';\r\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRight from '@mui/icons-material/ChevronRight';\r\nimport Clear from '@mui/icons-material/Clear';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport Edit from '@mui/icons-material/Edit';\r\nimport FilterList from '@mui/icons-material/FilterList';\r\nimport FirstPage from '@mui/icons-material/FirstPage';\r\nimport LastPage from '@mui/icons-material/LastPage';\r\nimport Remove from '@mui/icons-material/Remove';\r\nimport SaveAlt from '@mui/icons-material/SaveAlt';\r\nimport Search from '@mui/icons-material/Search';\r\nimport ViewColumn from '@mui/icons-material/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  export default tableIcons;","// import React, { useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import ProgressBar from '@mui/material/LinearProgress';\r\n// import ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n// import Tooltip from '@mui/material/Tooltip';\r\n// import PublishIcon from '@mui/icons-material/Publish';\r\n\r\n// import AddIcon from '@mui/icons-material/Add';\r\n// import SwapHorizontalCircleIcon from '@mui/icons-material/SwapHorizontalCircle';\r\n// import SubdirectoryArrowLeftIcon from '@mui/icons-material/SubdirectoryArrowLeft';\r\n// import CheckIcon from '@mui/icons-material/Check';\r\n\r\n// import PrintIcon from '@mui/icons-material/Print';\r\n// import ClearIcon from '@mui/icons-material/Clear';\r\n// import SaveIcon from '@mui/icons-material/Save';\r\n\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { IconButton, Box, FormControlLabel, FormLabel, Radio, RadioGroup, SpeedDial, SpeedDialAction, Switch, Tooltip, Fab } from '@mui/material';\r\n\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport PrintIcon from '@mui/icons-material/PrintTwoTone';\r\nimport Closecon from '@mui/icons-material/Close';\r\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\n\r\nexport default function GlobalHeader(props) {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    // fab action options\r\n    const actions = [\r\n        { icon: <ArrowBackIcon sx={{ color: theme.palette.grey[700] }} />, name: 'Back', onClick : props.goBack},\r\n        { icon: <ContentCopyIcon sx={{ color: theme.palette.grey[700] }} />, name: 'Copy BOM', onClick : props?.copyBom},\r\n        { icon: <DoneIcon sx={{ color: theme.palette.grey[700] }} />, name: 'Save',onClick : props?.SaveButton_OnClick },\r\n        { icon: <DoneAllIcon sx={{ color: theme.palette.grey[700] }} />, name: 'Submit' },\r\n        { icon: <Closecon sx={{ color: theme.palette.grey[700] }} />, name: 'Clear', onClick : props.clearAll_OnClick },\r\n        { icon: <PrintIcon sx={{ color: theme.palette.grey[700] }} />, name: 'Print' }\r\n    ];\r\n    return (\r\n        <>\r\n            {props.backDisabled === true ? null : (\r\n                <>\r\n                    <SpeedDial ariaLabel=\"SpeedDial example\" icon={<SpeedDialIcon openIcon={<EditIcon />} />} direction={'right'}>\r\n                        {actions.map((action) => (\r\n                            <SpeedDialAction key={action.name} icon={action.icon} tooltipTitle={action.name} hidden={action.hidden} onClick={action.onClick} />\r\n                        ))}\r\n                    </SpeedDial>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { InputLabel as MuiInputLabel } from '@mui/material';\r\n\r\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\r\n    shouldForwardProp: (prop) => prop !== 'horizontal'\r\n})(({ theme, horizontal }) => ({\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    marginBottom: horizontal ? 0 : 8\r\n}));\r\n\r\nconst InputLabel = ({ children, horizontal, ...others }) => (\r\n    <BInputLabel horizontal={horizontal} {...others}>\r\n        {children}\r\n    </BInputLabel>\r\n);\r\n\r\nInputLabel.propTypes = {\r\n    children: PropTypes.node,\r\n    horizontal: PropTypes.bool\r\n};\r\n\r\nInputLabel.defaultProps = {\r\n    horizontal: false\r\n};\r\n\r\nexport default InputLabel;\r\n"],"sourceRoot":""}